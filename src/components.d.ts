/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
export namespace Components {
    interface ProteanButton {
        disabled: boolean;
        type: string;
        variant: string;
    }
    interface ProteanCheckbox {
        alignment: string;
        ariaLabel: string;
        checked: boolean;
        disabled: boolean;
        indeterminate: boolean;
        label: string;
        type: string;
    }
    interface ProteanInput {
        ariaLabel: string;
        errors: string[];
        format: string;
        hints: string[];
        label: string;
        maxlength: number;
        optional: boolean;
        role: string;
        suppressMessages: boolean;
        type: string;
        value: string;
    }
    interface ProteanMessage {
        level: string;
        type: string;
    }
    interface ProteanTabContainer {
        name: string;
        value: string;
    }
    interface ProteanTabPane {
        guid: number;
        index: number;
        label: string;
        name: string;
        selected: boolean;
        value: string;
    }
}
declare global {
    interface HTMLProteanButtonElement
        extends Components.ProteanButton,
            HTMLStencilElement {}
    var HTMLProteanButtonElement: {
        prototype: HTMLProteanButtonElement;
        new (): HTMLProteanButtonElement;
    };
    interface HTMLProteanCheckboxElement
        extends Components.ProteanCheckbox,
            HTMLStencilElement {}
    var HTMLProteanCheckboxElement: {
        prototype: HTMLProteanCheckboxElement;
        new (): HTMLProteanCheckboxElement;
    };
    interface HTMLProteanInputElement
        extends Components.ProteanInput,
            HTMLStencilElement {}
    var HTMLProteanInputElement: {
        prototype: HTMLProteanInputElement;
        new (): HTMLProteanInputElement;
    };
    interface HTMLProteanMessageElement
        extends Components.ProteanMessage,
            HTMLStencilElement {}
    var HTMLProteanMessageElement: {
        prototype: HTMLProteanMessageElement;
        new (): HTMLProteanMessageElement;
    };
    interface HTMLProteanTabContainerElement
        extends Components.ProteanTabContainer,
            HTMLStencilElement {}
    var HTMLProteanTabContainerElement: {
        prototype: HTMLProteanTabContainerElement;
        new (): HTMLProteanTabContainerElement;
    };
    interface HTMLProteanTabPaneElement
        extends Components.ProteanTabPane,
            HTMLStencilElement {}
    var HTMLProteanTabPaneElement: {
        prototype: HTMLProteanTabPaneElement;
        new (): HTMLProteanTabPaneElement;
    };
    interface HTMLElementTagNameMap {
        'protean-button': HTMLProteanButtonElement;
        'protean-checkbox': HTMLProteanCheckboxElement;
        'protean-input': HTMLProteanInputElement;
        'protean-message': HTMLProteanMessageElement;
        'protean-tab-container': HTMLProteanTabContainerElement;
        'protean-tab-pane': HTMLProteanTabPaneElement;
    }
}
declare namespace LocalJSX {
    interface ProteanButton {
        disabled?: boolean;
        type?: string;
        variant?: string;
    }
    interface ProteanCheckbox {
        alignment?: string;
        ariaLabel?: string;
        checked?: boolean;
        disabled?: boolean;
        indeterminate?: boolean;
        label?: string;
        onChange?: (event: CustomEvent<any>) => void;
        type?: string;
    }
    interface ProteanInput {
        ariaLabel?: string;
        errors?: string[];
        format?: string;
        hints?: string[];
        label?: string;
        maxlength?: number;
        onChange?: (event: CustomEvent<any>) => void;
        onInput?: (event: CustomEvent<any>) => void;
        optional?: boolean;
        role?: string;
        suppressMessages?: boolean;
        type?: string;
        value?: string;
    }
    interface ProteanMessage {
        level?: string;
        type?: string;
    }
    interface ProteanTabContainer {
        name?: string;
        onChange?: (event: CustomEvent<any>) => void;
        value?: string;
    }
    interface ProteanTabPane {
        guid?: number;
        index?: number;
        label?: string;
        name?: string;
        selected?: boolean;
        value?: string;
    }
    interface IntrinsicElements {
        'protean-button': ProteanButton;
        'protean-checkbox': ProteanCheckbox;
        'protean-input': ProteanInput;
        'protean-message': ProteanMessage;
        'protean-tab-container': ProteanTabContainer;
        'protean-tab-pane': ProteanTabPane;
    }
}
export { LocalJSX as JSX };
declare module '@stencil/core' {
    export namespace JSX {
        interface IntrinsicElements {
            'protean-button': LocalJSX.ProteanButton &
                JSXBase.HTMLAttributes<HTMLProteanButtonElement>;
            'protean-checkbox': LocalJSX.ProteanCheckbox &
                JSXBase.HTMLAttributes<HTMLProteanCheckboxElement>;
            'protean-input': LocalJSX.ProteanInput &
                JSXBase.HTMLAttributes<HTMLProteanInputElement>;
            'protean-message': LocalJSX.ProteanMessage &
                JSXBase.HTMLAttributes<HTMLProteanMessageElement>;
            'protean-tab-container': LocalJSX.ProteanTabContainer &
                JSXBase.HTMLAttributes<HTMLProteanTabContainerElement>;
            'protean-tab-pane': LocalJSX.ProteanTabPane &
                JSXBase.HTMLAttributes<HTMLProteanTabPaneElement>;
        }
    }
}
