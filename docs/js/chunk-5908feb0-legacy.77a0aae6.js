(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5908feb0"],{"0709":function(e,t,c){"use strict";c("49f6")},"11db":function(e,t,c){"use strict";c.r(t);var o=c("4430");const a=Object(o["h"])("h1",null,"Checkbox",-1),l=Object(o["h"])("p",null," Checkboxes and toggles allow the user to select one or more options from a group, or to switch between two states. ",-1),s={class:"overview-content"},i=Object(o["h"])("h2",{"data-in-page-anchor":"overview"},"Overview",-1),n={class:"overview-demo"},d={class:"overview-demo-controls"},h={class:"overview-demo-snippet"},b=Object(o["g"])(Object(o["A"])('<protean-checkbox\n                label="Checkbox label" {0}{1}{2}{3}\n                alignment="{4}"\n            ></protean-checkbox>\n            ')),r=Object(o["f"])('<section class="best-practices-content"><h2 data-in-page-anchor="best-practices">Best practices</h2><section><h3>Checkboxes vs. radio buttons</h3><ul><li> Use <strong>checkboxes</strong> when the user can select more than one option in a group. </li><li> Use <strong>radio buttons</strong> when the user can select only one option in a group. <ul><li><strong>Note:</strong> the design system has not implemented a radio button element yet. Native radio buttons with a fieldset will work, but they do not have design system styles associated with them at this time.</li></ul></li></ul></section><section><h3>Checkboxes vs. toggle switches</h3><ul><li> Use a <strong>checkbox</strong> when the selection must be confirmed before taking effect (typically by clicking a form button). </li><ul><li> For example, a checkbox is appropriate when inviting a user to opt-in to email communications during a sign up workflow. The email opt-in, along with other sign up information, is collected only after the user clicks a button (e.g. &quot;Complete registration&quot;). </li></ul><li> Use a <strong>toggle switch</strong> when the selection should take effect immediately, without a separate confirming action. </li><ul><li> For example, applications that offer a &quot;dark mode&quot; could use a toggle switch to enable and disable that mode. The toggled setting takes effect immediately. </li></ul></ul></section></section>',1),p=Object(o["h"])("h2",{"data-in-page-anchor":"api"},"API",-1),g=Object(o["h"])("h3",null,"Properties",-1),j=Object(o["h"])("div",null,[Object(o["g"])(" In the following examples, "),Object(o["h"])("code",null,"element"),Object(o["g"])(" refers to an instance of "),Object(o["h"])("code",null,"protean-checkbox"),Object(o["g"])(" (i.e. "),Object(o["h"])("code",null,"element = document.querySelector('protean-checkbox#myCheckbox')"),Object(o["g"])("). ")],-1),O={class:"prop-list"},u={class:"prop-item"},m=Object(o["f"])('<div class="prop-info"><h4 class="prop-name">variant</h4><div class="prop-type"><code>&quot;checkbox&quot;</code> (default) | <code>&quot;toggle&quot;</code></div><div class="prop-attribute"> Attribute name: <code>variant</code></div><div class="prop-desc"> The visual style of the checkbox. </div></div>',1),v={class:"prop-example"},f=Object(o["g"])(" element.variant = 'toggle'; "),k={class:"prop-item"},x=Object(o["f"])('<div class="prop-info"><h4 class="prop-name">checked</h4><div class="prop-type"><code>boolean</code></div><div class="prop-attribute"> Attribute name: <code>checked</code></div><div class="prop-desc"> The checked state of the checkbox. </div></div>',1),w={class:"prop-example"},y=Object(o["g"])(" element.checked = true; "),C={class:"prop-item"},A=Object(o["f"])('<div class="prop-info"><h4 class="prop-name">label</h4><div class="prop-type"><code>string</code></div><div class="prop-attribute"> Attribute name: <code>label</code></div><div class="prop-desc"> The visible label for the checkbox. </div></div>',1),E={class:"prop-example"},T=Object(o["g"])(" element.label = 'Field label'; "),I={class:"prop-item"},_=Object(o["f"])('<div class="prop-info"><h4 class="prop-name">a11yLabel</h4><div class="prop-type"><code>string</code></div><div class="prop-attribute"> Attribute name: <code>a11y-label</code></div><div class="prop-desc"> The label read by assistive technologies for the checkbox; <code>a11yLabel</code> is used here instead of <code>ariaLabel</code> to prevent double readings of the text by those technologies. Note: when <code>label</code> is set, this value will not be bound to the field. </div></div>',1),q={class:"prop-example"},F=Object(o["g"])(" element.a11yLabel = 'Field aria-label'; "),S={class:"prop-item"},D=Object(o["f"])('<div class="prop-info"><h4 class="prop-name">disabled</h4><div class="prop-type"><code>boolean</code></div><div class="prop-attribute"> Attribute name: <code>disabled</code></div><div class="prop-desc">Disables checkbox interaction.</div></div>',1),L={class:"prop-example"},R=Object(o["g"])(" element.disabled = true; "),U={class:"prop-item"},V=Object(o["f"])('<div class="prop-info"><h4 class="prop-name">alignment</h4><div class="prop-type"><code>&quot;left&quot;</code> (default) | <code>&quot;right&quot;</code></div><div class="prop-attribute"> Attribute name: <code>alignment</code></div><div class="prop-desc"> The placement of the checkbox relative to its label. </div></div>',1),N={class:"prop-example"},B=Object(o["g"])(' element.alignment = "right"; '),J={class:"prop-item"},P=Object(o["f"])('<div class="prop-info"><h4 class="prop-name">indeterminate</h4><div class="prop-type"><code>boolean</code></div><div class="prop-attribute"> Attribute name: <code>indeterminate</code></div><div class="prop-desc"> Shows the checkbox in an indeterminate state. Best used to indicate partial selection of options on a checkbox that controls all others in a group. Does not apply to toggles. </div></div>',1),M={class:"prop-example"},$=Object(o["g"])(" element.indeterminate = true; "),z=Object(o["h"])("h3",null,"Event",-1),G={class:"prop-list"},H={class:"prop-item"},K={class:"prop-info"},Q=Object(o["h"])("h4",{class:"prop-name"},"change",-1),W={class:"prop-desc"},X=Object(o["g"])(" Fires when the checkbox is toggled. "),Y=Object(o["h"])("h5",null,"Event detail",-1),Z=Object(o["g"])(Object(o["A"])("\n                                event: {\n                                    detail: {\n                                        checked: boolean,\n                                    }\n                                }\n                            ")),ee={class:"prop-example"},te=Object(o["h"])("h3",null,"CSS variables",-1),ce=Object(o["h"])("p",null,[Object(o["g"])("Listed below are the CSS variables that can be adjusted to alter the "),Object(o["h"])("code",null,"protean-checkbox"),Object(o["g"])(" element's appearance along with the default values set in the "),Object(o["h"])("code",null,"protean-styles"),Object(o["g"])(" package:")],-1),oe={class:"prop-list stacked"},ae={class:"prop-item"},le=Object(o["h"])("div",{class:"prop-info"},[Object(o["h"])("h4",{class:"prop-name"},"--protean-checkbox-margin"),Object(o["h"])("div",{class:"prop-desc"},[Object(o["g"])(" The margin around the "),Object(o["h"])("code",null,"protean-checkbox"),Object(o["g"])(" element. ")])],-1),se={class:"prop-example"},ie=Object(o["g"])(" --protean-checkbox-margin: 1rem; "),ne={class:"prop-item"},de=Object(o["h"])("div",{class:"prop-info"},[Object(o["h"])("h4",{class:"prop-name"},"--protean-checkbox-outline-color"),Object(o["h"])("div",{class:"prop-desc"}," The color of the outline around the checkbox. ")],-1),he={class:"prop-example"},be=Object(o["g"])(" --protean-checkbox-outline-color: var(--action-color); "),re={class:"prop-item"},pe=Object(o["h"])("div",{class:"prop-info"},[Object(o["h"])("h4",{class:"prop-name"},"--protean-checkbox-toggle-path-color"),Object(o["h"])("div",{class:"prop-desc"},[Object(o["g"])(" The color of the toggle path when not "),Object(o["h"])("code",null,"checked"),Object(o["g"])(". ")])],-1),ge={class:"prop-example"},je=Object(o["g"])(" --protean-checkbox-toggle-path-color: #535353; "),Oe={class:"prop-item"},ue=Object(o["h"])("div",{class:"prop-info"},[Object(o["h"])("h4",{class:"prop-name"},"--protean-checkbox-toggle-circle-fill"),Object(o["h"])("div",{class:"prop-desc"},[Object(o["g"])(" The color of the toggle circle when not "),Object(o["h"])("code",null,"checked"),Object(o["g"])(". ")])],-1),me={class:"prop-example"},ve=Object(o["g"])(" --protean-checkbox-toggle-circle-fill: #000000; "),fe={class:"prop-item"},ke=Object(o["h"])("div",{class:"prop-info"},[Object(o["h"])("h4",{class:"prop-name"},"--protean-checkbox-checked-outer-color"),Object(o["h"])("div",{class:"prop-desc"},[Object(o["g"])(" The color that fills a standard checkbox and the toggle path when "),Object(o["h"])("code",null,"checked"),Object(o["g"])(". ")])],-1),xe={class:"prop-example"},we=Object(o["g"])(" --protean-checkbox-checked-outer-color: var(--action-color); "),ye={class:"prop-item"},Ce=Object(o["h"])("div",{class:"prop-info"},[Object(o["h"])("h4",{class:"prop-name"},"--protean-checkbox-checked-inner-color"),Object(o["h"])("div",{class:"prop-desc"},[Object(o["g"])(" The color of a standard checkbox's check mark and the toggle circle when "),Object(o["h"])("code",null,"checked"),Object(o["g"])(". ")])],-1),Ae={class:"prop-example"},Ee=Object(o["g"])(" --protean-checkbox-checked-inner-color: var(--action-contrast-color); "),Te={class:"prop-item"},Ie=Object(o["h"])("div",{class:"prop-info"},[Object(o["h"])("h4",{class:"prop-name"},"--protean-checkbox-disabled-opacity"),Object(o["h"])("div",{class:"prop-desc"}," The opacity of the field while it is disabled. ")],-1),_e={class:"prop-example"},qe=Object(o["g"])(" --protean-checkbox-disabled-opacity: var(--disabled-opacity); ");function Fe(e,t){const c=Object(o["x"])("protean-checkbox"),Fe=Object(o["x"])("code-snippet"),Se=Object(o["y"])("prop");return Object(o["q"])(),Object(o["d"])(o["a"],null,[a,l,Object(o["h"])("section",s,[i,Object(o["h"])("div",n,[Object(o["F"])(Object(o["h"])(c,{class:"overview-demo-element",label:"Checkbox label",variant:e.demoVariant,disabled:e.demoDisabled,alignment:e.demoAlignment,indeterminate:e.demoIndeterminate,onChange:t[1]||(t[1]=t=>e.demoChecked=t.detail.checked)},null,8,["variant","disabled","alignment","indeterminate"]),[[Se,e.demoChecked,"checked"]])]),Object(o["h"])("div",d,[Object(o["F"])(Object(o["h"])(c,{class:"demo-toggle-toggle",label:"Show as toggle",variant:"toggle",disabled:e.demoIndeterminate,onChange:t[2]||(t[2]=t=>e.demoIsToggle=t.detail.checked)},null,8,["disabled"]),[[Se,e.demoIsToggle,"checked"]]),Object(o["F"])(Object(o["h"])(c,{class:"demo-toggle-disabled",label:"Show as disabled",variant:"toggle",onChange:t[3]||(t[3]=t=>e.demoDisabled=t.detail.checked)},null,512),[[Se,e.demoDisabled,"checked"]]),Object(o["F"])(Object(o["h"])(c,{class:"demo-toggle-alignment",label:"Align to the right",variant:"toggle",onChange:t[4]||(t[4]=t=>e.demoIsRightAligned=t.detail.checked)},null,512),[[Se,e.demoIsRightAligned,"checked"]]),Object(o["F"])(Object(o["h"])(c,{class:"demo-toggle-indeterminate",label:"Show as indeterminate",variant:"toggle",disabled:e.demoIsToggle,onChange:t[5]||(t[5]=t=>e.demoIndeterminate=t.detail.checked)},null,8,["disabled"]),[[Se,e.demoIndeterminate,"checked"]])]),Object(o["h"])("div",h,[Object(o["h"])(Fe,{substitutions:[e.demoVariant?`\n variant="${e.demoVariant}"`:"",e.demoChecked?"\n checked":"",e.demoDisabled?"\n disabled":"",e.demoIndeterminate&&!e.demoIsToggle?"\n indeterminate":"",e.demoAlignment]},{default:Object(o["E"])(()=>[b]),_:1},8,["substitutions"])])]),r,Object(o["h"])("section",null,[p,Object(o["h"])("section",null,[g,j,Object(o["h"])("ul",O,[Object(o["h"])("li",u,[m,Object(o["h"])("div",v,[Object(o["h"])(Fe,{language:"javascript"},{default:Object(o["E"])(()=>[f]),_:1})])]),Object(o["h"])("li",k,[x,Object(o["h"])("div",w,[Object(o["h"])(Fe,{language:"javascript"},{default:Object(o["E"])(()=>[y]),_:1})])]),Object(o["h"])("li",C,[A,Object(o["h"])("div",E,[Object(o["h"])(Fe,{language:"javascript"},{default:Object(o["E"])(()=>[T]),_:1})])]),Object(o["h"])("li",I,[_,Object(o["h"])("div",q,[Object(o["h"])(Fe,{language:"javascript"},{default:Object(o["E"])(()=>[F]),_:1})])]),Object(o["h"])("li",S,[D,Object(o["h"])("div",L,[Object(o["h"])(Fe,{language:"javascript"},{default:Object(o["E"])(()=>[R]),_:1})])]),Object(o["h"])("li",U,[V,Object(o["h"])("div",N,[Object(o["h"])(Fe,{language:"javascript"},{default:Object(o["E"])(()=>[B]),_:1})])]),Object(o["h"])("li",J,[P,Object(o["h"])("div",M,[Object(o["h"])(Fe,{language:"javascript"},{default:Object(o["E"])(()=>[$]),_:1})])])])]),Object(o["h"])("section",null,[z,Object(o["h"])("ul",G,[Object(o["h"])("li",H,[Object(o["h"])("div",K,[Q,Object(o["h"])("div",W,[X,Y,Object(o["h"])(Fe,{language:"typescript"},{default:Object(o["E"])(()=>[Z]),_:1})])]),Object(o["h"])("div",ee,[Object(o["h"])(Fe,{language:"javascript"},{default:Object(o["E"])(()=>[Object(o["g"])(Object(o["A"])("\n                            function onChange(event) {\n                                this.checked = event.detail.checked;\n                            }\n                        "),1)]),_:1}),Object(o["h"])(Fe,{language:"html"},{default:Object(o["E"])(()=>[Object(o["g"])(Object(o["A"])('\n                        <protean-checkbox\n                            label="My checkbox label"\n                            onchange="onChange(event)"\n                        ></protean-checkbox>\n                        '),1)]),_:1})])])])]),Object(o["h"])("section",null,[te,ce,Object(o["h"])("ul",oe,[Object(o["h"])("li",ae,[le,Object(o["h"])("div",se,[Object(o["h"])(Fe,{language:"css"},{default:Object(o["E"])(()=>[ie]),_:1})])]),Object(o["h"])("li",ne,[de,Object(o["h"])("div",he,[Object(o["h"])(Fe,{language:"css"},{default:Object(o["E"])(()=>[be]),_:1})])]),Object(o["h"])("li",re,[pe,Object(o["h"])("div",ge,[Object(o["h"])(Fe,{language:"css"},{default:Object(o["E"])(()=>[je]),_:1})])]),Object(o["h"])("li",Oe,[ue,Object(o["h"])("div",me,[Object(o["h"])(Fe,{language:"css"},{default:Object(o["E"])(()=>[ve]),_:1})])]),Object(o["h"])("li",fe,[ke,Object(o["h"])("div",xe,[Object(o["h"])(Fe,{language:"css"},{default:Object(o["E"])(()=>[we]),_:1})])]),Object(o["h"])("li",ye,[Ce,Object(o["h"])("div",Ae,[Object(o["h"])(Fe,{language:"css"},{default:Object(o["E"])(()=>[Ee]),_:1})])]),Object(o["h"])("li",Te,[Ie,Object(o["h"])("div",_e,[Object(o["h"])(Fe,{language:"css"},{default:Object(o["E"])(()=>[qe]),_:1})])])])])])],64)}var Se=c("0f9e"),De=c("9ad1"),Le=c("fc89");let Re=class extends De["b"]{constructor(){super(...arguments),this.demoChecked=!1,this.demoIsToggle=!1,this.demoIsRightAligned=!1,this.demoDisabled=!1,this.demoIndeterminate=!1}get demoVariant(){if(this.demoIsToggle)return"toggle"}get demoAlignment(){return this.demoIsRightAligned?"right":"left"}};Re=Object(Se["a"])([Object(De["a"])({components:{CodeSnippet:Le["a"]}})],Re);var Ue=Re;c("0709");Ue.render=Fe;t["default"]=Ue},"49f6":function(e,t,c){}}]);
//# sourceMappingURL=chunk-5908feb0-legacy.77a0aae6.js.map