{"version":3,"sources":["webpack:///../protean-elements/dist/esm/protean-tab-container.entry.js","webpack:///../protean-elements/dist/esm/utils-9777d7c1.js"],"names":["stylesCss","ProteanTabContainer","hostRef","registerInstance","this","change","createEvent","name","guid","createGuid","updateTabData","updateTabPanes","updateTabs","tabPanes","forEach","tab","index","selected","value","selectedValue","tabs","Array","from","map","label","onTabClick","event","target","dataset","emit","onTabKeyup","currentValue","key","moveToAdjacentTab","buildTabControl","h","role","type","tabIndex","id","onClick","onKeyUp","hostElement","onchange","detail","focusActiveTab","observer","MutationObserver","observe","childList","subtree","attributes","disconnect","direction","currentIndex","indexOf","nextIndex","length","shadowRoot","querySelector","focus","class","querySelectorAll","isValidValue","some","getElement","style"],"mappings":"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","file":"js/chunk-f84888c4.1b53ed81.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, g as getElement } from './index-499de8b5.js';\nimport { c as createGuid } from './utils-9777d7c1.js';\n\nconst stylesCss = \"*{box-sizing:border-box}input,button{font-family:inherit;font-size:inherit}button{cursor:pointer;background:none;border:none}:host(.sr),:host(.sr) button{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.sr,.sr button{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.hidden{display:none}:host([hidden]){display:none}.invisible{visibility:hidden}:host{display:block}.tab-list{display:flex;align-items:center;overflow-x:auto;margin:0;padding:0;border-top:1px solid var(--protean-tab-container-border-color);list-style:none}.tab-list button{font-size:1.125rem;padding:1rem;text-decoration:none;color:inherit;transition:box-shadow 0.2s ease-in-out}.tab-list button[aria-selected='true']{box-shadow:inset var(--action-color) 0 5px}\";\n\nconst ProteanTabContainer = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.change = createEvent(this, \"change\", 3);\n    this.name = '';\n    this.guid = createGuid();\n    this.updateTabData = () => {\n      this.updateTabPanes();\n      this.updateTabs();\n    };\n    this.updateTabPanes = () => {\n      this.tabPanes.forEach((tab, index) => {\n        tab.selected = tab.value === this.selectedValue;\n        tab.guid = this.guid;\n        tab.index = index;\n      });\n    };\n    this.updateTabs = () => {\n      this.tabs = Array.from(this.tabPanes).map(tab => {\n        const { label, value, index } = tab;\n        return {\n          label,\n          value,\n          index,\n        };\n      });\n    };\n    this.onTabClick = (event) => {\n      const value = event.target.dataset.value;\n      if (value !== this.value) {\n        this.change.emit({\n          value,\n        });\n      }\n    };\n    this.onTabKeyup = (event) => {\n      const currentValue = event.target.dataset.value;\n      if (event.key === 'ArrowRight') {\n        this.moveToAdjacentTab(currentValue, 'next');\n        return;\n      }\n      if (event.key === 'ArrowLeft') {\n        this.moveToAdjacentTab(currentValue, 'prev');\n        return;\n      }\n    };\n    this.buildTabControl = (tab) => {\n      const selected = tab.value === this.selectedValue;\n      return (h(\"button\", { role: \"tab\", type: \"button\", \"aria-selected\": `${selected}`, tabIndex: selected ? 0 : -1, \"data-value\": tab.value, \"aria-controls\": `tab-pane-${this.guid}-${tab.index}`, id: `tab-${this.guid}-${tab.index}`, onClick: this.onTabClick, onKeyUp: this.onTabKeyup }, tab.label));\n    };\n  }\n  get tabPanes() {\n    return this.hostElement.querySelectorAll(`protean-tab-pane[name=\"${this.name}\"]`);\n  }\n  get selectedValue() {\n    const isValidValue = this.tabs?.some(tab => tab.value === this.value) ?? true;\n    return isValidValue ? this.value : this.tabs[0]?.value ?? '';\n  }\n  defaultChangeHandler(event) {\n    if (event.target === this.hostElement && !this.hostElement.onchange) {\n      this.value = event.detail.value;\n      this.focusActiveTab();\n    }\n  }\n  connectedCallback() {\n    const observer = new MutationObserver(this.updateTabData);\n    observer.observe(this.hostElement, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n    });\n    this.updateTabData();\n    this.observer = observer;\n  }\n  disconnectedCallback() {\n    this.observer.disconnect();\n  }\n  moveToAdjacentTab(currentValue, direction) {\n    const currentIndex = this.tabs\n      .map(tab => tab.value)\n      .indexOf(currentValue);\n    let nextIndex = currentIndex;\n    if (direction === 'next') {\n      if (currentIndex < this.tabs.length - 1) {\n        nextIndex++;\n      }\n      else {\n        nextIndex = 0;\n      }\n    }\n    else {\n      if (currentIndex > 0) {\n        nextIndex--;\n      }\n      else {\n        nextIndex = this.tabs.length - 1;\n      }\n    }\n    const value = this.tabs[nextIndex].value;\n    this.change.emit({ value });\n  }\n  focusActiveTab() {\n    this.hostElement.shadowRoot\n      .querySelector(`button[data-value=\"${this.selectedValue}\"]`)\n      .focus();\n  }\n  render() {\n    return (h(\"div\", { class: \"tab-container\" }, h(\"div\", { class: \"tab-list\", role: \"tablist\" }, this.tabs.length > 1 &&\n      this.tabs.map(this.buildTabControl)), h(\"div\", { class: \"tab-content\" }, h(\"slot\", null))));\n  }\n  get hostElement() { return getElement(this); }\n};\nProteanTabContainer.style = stylesCss;\n\nexport { ProteanTabContainer as protean_tab_container };\n","let guid = 1000;\nfunction createGuid() {\n  return guid++;\n}\n\nexport { createGuid as c };\n"],"sourceRoot":""}