{"version":3,"sources":["webpack:///../protean-elements/dist/esm/protean-input.entry.js","webpack:///../protean-elements/dist/esm/utils-9777d7c1.js"],"names":["formatGeneric","value","format","formattedValue","optionalValidatingCharacters","Set","knownValidatingCharacters","splitFormat","split","valueIndex","formattingCharacters","filter","char","has","formattedValueObj","reduce","acc","item","length","formattedChar","checkCharacter","includes","validatingCharacter","character","replace","formats","formatDate","fmt","formatNumber","options","decimals","explicit","thousandsSeparator","decimalSeparator","filteredValue","Number","toFixed","splitValue","integerString","decimalString","formattedIntegerString","formattedDecimalString","valueString","formattedValueString","integerLength","substring","padStart","formats$1","delimited","dec","formatNumeric","formatObj","formats$2","US","formatPhoneNumber","stylesCss","ProteanInput","hostRef","registerInstance","this","change","createEvent","input","disabled","readonly","guid","createGuid","inputId","descriptionId","scheduledAfterRender","onInputChange","event","stopPropagation","formattedValueObject","getFormattedValueObj","inputElement","emit","onInputInput","cursorData","calculateCursorPositionOnInput","setCursorPosition","onInputFocus","setMessagesHeight","onInputBlur","showMessages","messageContainer","style","height","onLabelClick","stopImmediatePropagation","reformatValue","forEach","fn","hostElement","onchange","detail","push","messageContainerHeight","formattingFnMap","phone","date","numeric","formattingFn","type","formattedValueLength","startingPosition","selectionStart","valueLength","previousValueLength","hasSelection","cursorPosition","setSelectionRange","h","class","hasErrors","label","htmlFor","onClick","optional","id","inputType","readOnly","inputAriaLabel","ariaHasPopup","undefined","ariaExpanded","onChange","onInput","onFocus","onBlur","renderMessages","level","variant","messages","map","message","shadowRoot","querySelector","inputTypeMap","text","tel","number","password","search","email","ariaLabel","Array","isArray","errors","hasHints","hints","suppressMessages","getBoundingClientRect","getElement"],"mappings":"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","file":"js/chunk-a0c02c50.93c26106.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, g as getElement } from './index-499de8b5.js';\nimport { c as createGuid } from './utils-9777d7c1.js';\n\nfunction formatGeneric(value = '', format = '') {\n  if (!value || !format) {\n    return {\n      value,\n      formattedValue: value,\n    };\n  }\n  const optionalValidatingCharacters = new Set(['@', '#']);\n  const knownValidatingCharacters = new Set([\n    'a',\n    'A',\n    '0',\n    ...optionalValidatingCharacters,\n  ]);\n  const splitFormat = format.split('');\n  let valueIndex = 0;\n  const formattingCharacters = new Set(splitFormat.filter(char => !knownValidatingCharacters.has(char)));\n  const formattedValueObj = splitFormat.reduce((acc, item) => {\n    if (valueIndex >= value.length)\n      return acc;\n    if (optionalValidatingCharacters.has(item) &&\n      formattingCharacters.has(value[valueIndex])) {\n      return acc;\n    }\n    if (knownValidatingCharacters.has(item)) {\n      const formattedChar = checkCharacter(item);\n      if (formattedChar) {\n        valueIndex++;\n        return {\n          value: `${acc.value}${formattedChar}`,\n          formattedValue: `${acc.formattedValue}${formattedChar}`,\n        };\n      }\n      return acc;\n    }\n    value[valueIndex].includes(item) && valueIndex++;\n    return {\n      value: acc.value,\n      formattedValue: `${acc.formattedValue}${item}`,\n    };\n  }, { value: '', formattedValue: '' });\n  return {\n    value: formattedValueObj.value,\n    formattedValue: formattedValueObj.formattedValue,\n  };\n  function checkCharacter(validatingCharacter) {\n    if (valueIndex >= value.length)\n      return '';\n    let character = value[valueIndex];\n    switch (validatingCharacter) {\n      case 'a':\n        character = character.replace(/[^a-zA-Z]+/g, '');\n        break;\n      case 'A':\n        character = character.replace(/[^A-Z]+/g, '');\n        break;\n      case '0':\n        character = character.replace(/[^\\d]/g, '');\n        break;\n      case '@':\n        character = character.replace(/[^\\da-zA-Z]+/g, '');\n        break;\n      case '#':\n        character = character.replace(/[^\\d]/g, '');\n        break;\n    }\n    if (character) {\n      return character;\n    }\n    valueIndex++;\n    return checkCharacter(validatingCharacter);\n  }\n}\n\nconst formats = {\n  'MM/DD/YYYY': '00/00/0000',\n  'M/D/YYYY': '0#/0#/0000',\n  'MM/DD/YY': '00/00/00',\n  'M/D/YY': '0#/0#/00',\n  'MM/YY': '00/00',\n  'M/YY': '0#/00',\n};\nfunction formatDate(value, format = 'MM/DD/YYYY') {\n  const fmt = formats[format] ?? formats['MM/DD/YYYY'];\n  return formatGeneric(value, fmt);\n}\n\nfunction formatNumber(value = '', options = {\n  decimals: 0,\n}, explicit = false) {\n  const decimals = options?.decimals ?? 0;\n  const thousandsSeparator = ',';\n  const decimalSeparator = '.';\n  let filteredValue = value;\n  if (explicit) {\n    filteredValue = value.replace(/[^\\d.]/g, '');\n    filteredValue = filteredValue\n      ? Number(filteredValue).toFixed(decimals)\n      : '';\n  }\n  filteredValue = filteredValue.replace(/[^\\d]/g, '');\n  const { integerString, decimalString } = splitValue(filteredValue, decimals);\n  const formattedIntegerString = integerString.replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandsSeparator);\n  const formattedDecimalString = decimals > 0 ? `${decimalSeparator}${decimalString}` : '';\n  const valueString = `${integerString}${formattedDecimalString}`;\n  const formattedValueString = `${formattedIntegerString}${formattedDecimalString}`;\n  return { value: valueString, formattedValue: formattedValueString };\n}\nfunction splitValue(value, decimals) {\n  const integerLength = value.length - decimals;\n  let integerString = value\n    .substring(0, integerLength)\n    .padStart(decimals > 0 ? 1 : 0, '0');\n  if (integerString.length > 1 && integerString[0] === '0') {\n    integerString = integerString.substring(1);\n  }\n  const decimalString = value\n    .substring(integerLength)\n    .padStart(decimals, '0');\n  return {\n    integerString,\n    decimalString,\n  };\n}\n\nconst formats$1 = {\n  delimited: {\n    decimals: 2,\n  },\n  dec: {\n    decimals: 0,\n  },\n};\nfunction formatNumeric(value, format = 'delimited', explicit = false) {\n  if (format.includes('dec')) {\n    const decimals = Number(format.replace('dec', ''));\n    const formatObj = {\n      ...formats$1.dec,\n      decimals,\n    };\n    return formatNumber(value, formatObj, explicit);\n  }\n  const formatObj = formats$1[format] ?? formats$1['delimited'];\n  return formatNumber(value, formatObj, explicit);\n}\n\nconst formats$2 = {\n  US: {\n    format: '(000) 000-0000',\n  },\n};\nfunction formatPhoneNumber(value, format = 'US') {\n  const formatObj = formats$2[format] ?? formats$2['US'];\n  return formatGeneric(value, formatObj.format);\n}\n\nconst stylesCss = \"*{box-sizing:border-box}input,button{font-family:inherit;font-size:inherit}button{cursor:pointer;background:none;border:none}:host(.sr),:host(.sr) button{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.sr,.sr button{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.hidden{display:none}:host([hidden]){display:none}.invisible{visibility:hidden}:host{display:block;margin:1rem}.input-wrapper{position:relative}.input-container{border:1px solid currentColor;border-radius:2px;flex-grow:1}:host([disabled]) .input-container{opacity:0.4}:host([disabled]) .input-container,:host([disabled]) label,:host([disabled]) input{cursor:not-allowed}.input-container:focus-within{outline:auto 1px}.input-container.has-error{border-color:var(--protean-status-error)}.error-icon{margin-right:0.25rem;height:1.25em;width:1.25em}label{display:flex;align-items:center;font-weight:400;padding:0.375rem 0.5rem 0.25rem;font-size:0.6875rem}.optional-tag{font-size:0.625rem;margin-left:0.25rem}input{height:30px;width:100%;padding:0 0.5rem;border:none;background-color:transparent;font-size:1rem;color:inherit;box-shadow:none}input:focus{outline:none}.message-container{position:absolute;top:calc(100% - 1px);width:100%;height:0;transition:height 0.2s ease-in-out;overflow:hidden;z-index:2;box-shadow:0 2px 4px rgba(0, 0, 0, 0.5)}.message-container protean-message{margin:0}.message-container ul{margin:0;padding:0 1rem}\";\n\nconst ProteanInput = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.change = createEvent(this, \"change\", 3);\n    this.input = createEvent(this, \"input\", 3);\n    this.disabled = false;\n    this.readonly = false;\n    this.guid = createGuid();\n    this.inputId = `protean-input-${this.guid}`;\n    this.descriptionId = `protean-input-description-${this.guid}`;\n    this.scheduledAfterRender = [];\n    this.onInputChange = (event) => {\n      event.stopPropagation();\n      this.formattedValueObject = this.getFormattedValueObj(this.inputElement.value);\n      this.inputElement.value = this.formattedValueObject.formattedValue;\n      if (this.value !== this.formattedValueObject.value) {\n        this.change.emit({\n          value: this.formattedValueObject.value,\n          formattedValue: this.formattedValueObject.formattedValue,\n        });\n      }\n    };\n    this.onInputInput = (event) => {\n      event.stopPropagation();\n      this.formattedValueObject = this.getFormattedValueObj(this.inputElement.value);\n      this.cursorData = this.calculateCursorPositionOnInput();\n      this.inputElement.value = this.formattedValueObject.formattedValue;\n      this.setCursorPosition();\n      if (this.value !== this.formattedValueObject.value) {\n        this.input.emit({\n          value: this.formattedValueObject.value,\n          formattedValue: this.formattedValueObject.formattedValue,\n        });\n      }\n    };\n    this.onInputFocus = () => {\n      this.setMessagesHeight();\n    };\n    this.onInputBlur = () => {\n      if (this.showMessages) {\n        this.messageContainer.style.height = '0px';\n      }\n    };\n    this.onLabelClick = (event) => {\n      event.stopImmediatePropagation();\n    };\n  }\n  componentDidLoad() {\n    this.reformatValue();\n  }\n  componentDidRender() {\n    this.scheduledAfterRender.forEach(fn => {\n      fn();\n    });\n    this.scheduledAfterRender = [];\n  }\n  get inputElement() {\n    return this.hostElement.shadowRoot.querySelector('input');\n  }\n  get inputType() {\n    const inputTypeMap = {\n      text: 'text',\n      tel: 'tel',\n      phone: 'tel',\n      numeric: 'tel',\n      date: 'tel',\n      number: 'number',\n      password: 'password',\n      search: 'search',\n      email: 'email',\n    };\n    return inputTypeMap[this.type] ?? 'text';\n  }\n  get inputAriaLabel() {\n    if (this.label)\n      return null;\n    return this.ariaLabel ?? null;\n  }\n  get hasErrors() {\n    return Array.isArray(this.errors) && this.errors.length > 0;\n  }\n  get messages() {\n    if (this.hasErrors) {\n      return this.errors;\n    }\n    const hasHints = Array.isArray(this.hints) && this.hints.length > 0;\n    if (hasHints) {\n      return this.hints;\n    }\n    return;\n  }\n  get showMessages() {\n    return (Array.isArray(this.messages) &&\n      this.messages.length > 0 &&\n      !this.suppressMessages);\n  }\n  get messageContainer() {\n    return this.hostElement.shadowRoot.querySelector('.message-container');\n  }\n  get messageContainerHeight() {\n    const height = this.hostElement.shadowRoot\n      .querySelector('.message-container protean-message')\n      .getBoundingClientRect().height;\n    return `${height}px`;\n  }\n  defaultChangeHandler(event) {\n    if (!this.hostElement.onchange) {\n      this.value = event.detail.value;\n    }\n  }\n  reformatValue() {\n    this.formattedValueObject = this.getFormattedValueObj(this.value, true);\n    this.inputElement.value = this.formattedValueObject.formattedValue;\n  }\n  onMessageUpdate() {\n    this.scheduledAfterRender.push(() => {\n      this.setMessagesHeight();\n    });\n  }\n  setMessagesHeight() {\n    if (this.showMessages) {\n      this.messageContainer.style.height = this.messageContainerHeight;\n    }\n  }\n  getFormattedValueObj(value = '', explicit = false) {\n    const formattingFnMap = {\n      phone: formatPhoneNumber,\n      date: formatDate,\n      numeric: formatNumeric,\n    };\n    const formattingFn = formattingFnMap[this.type];\n    return (formattingFn?.(value, this.format, explicit) ?? {\n      value,\n      formattedValue: value,\n    });\n  }\n  calculateCursorPositionOnInput() {\n    const inputElement = this.inputElement;\n    const formattedValueLength = this.formattedValueObject.formattedValue\n      .length;\n    return {\n      startingPosition: inputElement.selectionStart ?? formattedValueLength,\n      valueLength: formattedValueLength,\n      previousValueLength: inputElement.value.length,\n      hasSelection: false,\n    };\n  }\n  setCursorPosition() {\n    if (!this.cursorData.hasSelection) {\n      const inputElement = this.inputElement;\n      const { valueLength, previousValueLength, startingPosition, } = this.cursorData;\n      const cursorPosition = startingPosition + (valueLength - previousValueLength);\n      inputElement.setSelectionRange(cursorPosition, cursorPosition);\n    }\n  }\n  render() {\n    return (h(\"div\", { class: \"input-wrapper\" }, h(\"div\", { class: `input-container ${this.hasErrors ? 'has-error' : ''}` }, this.label && (h(\"label\", { htmlFor: this.inputId, onClick: this.onLabelClick }, this.hasErrors && (h(\"protean-icon\", { type: \"status-error-filled\", class: \"error-icon\" })), this.label, this.optional && (h(\"span\", { class: \"optional-tag\" }, \" (optional)\")))), h(\"input\", { id: this.inputId, type: this.inputType, disabled: this.disabled, readOnly: this.readonly, \"aria-required\": `${!this.optional}`, \"aria-label\": this.inputAriaLabel, \"aria-invalid\": `${this.hasErrors}`, \"aria-describedby\": this.descriptionId, \"aria-haspopup\": this.ariaHasPopup, \"aria-expanded\": this.ariaExpanded === undefined\n        ? null\n        : `${this.ariaExpanded}`, onChange: this.onInputChange, onInput: this.onInputInput, onFocus: this.onInputFocus, onBlur: this.onInputBlur })), this.renderMessages()));\n  }\n  renderMessages() {\n    return (h(\"div\", { class: \"message-container\" }, h(\"protean-message\", { type: this.hasErrors ? 'error' : 'info', level: \"status\", variant: \"inline\" }, h(\"ul\", { id: this.descriptionId }, this.showMessages &&\n      this.messages.map(message => h(\"li\", null, message))))));\n  }\n  get hostElement() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"reformatValue\"],\n    \"type\": [\"reformatValue\"],\n    \"format\": [\"reformatValue\"],\n    \"hints\": [\"onMessageUpdate\"],\n    \"errors\": [\"onMessageUpdate\"]\n  }; }\n};\nProteanInput.style = stylesCss;\n\nexport { ProteanInput as protean_input };\n","let guid = 1000;\nfunction createGuid() {\n  return guid++;\n}\n\nexport { createGuid as c };\n"],"sourceRoot":""}