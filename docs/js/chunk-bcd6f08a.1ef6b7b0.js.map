{"version":3,"sources":["webpack:///../protean-elements/dist/esm/utils-9777d7c1.js","webpack:///../protean-elements/dist/esm/protean-select.entry.js"],"names":["guid","createGuid","stylesCss","ProteanSelect","hostRef","registerInstance","this","change","createEvent","dropdownOpen","functionQueue","functionQueueTimeout","closeDropdown","activeOption","active","activeOptionId","executeFunctionQueue","setTimeout","forEach","fn","onInputClick","onInputKeyDown","event","key","preventDefault","onInputKeyUp","isNavigationKey","includes","optionElements","length","handleOptionNavigation","handleSelection","value","onOptionClick","option","target","localName","onMutationObserved","index","id","updateOptions","mutationObserver","MutationObserver","observe","hostElement","childList","subtree","multiple","selectedOptions","detail","push","updateMultipleOptions","updateSingleOptions","console","error","selected","preSelectedOption","find","filter","map","targetOption","activeOptionIndex","activateDefaultOption","lastOptionIndex","targetIndex","disabled","disabledGroup","scrollIntoView","behavior","block","handleMultiSelection","handleSingleSelection","emit","h","class","displayValue","label","optional","errors","readonly","ariaLabel","selectAriaLabel","ariaHasPopup","ariaExpanded","onClick","onKeyUp","onKeyDown","type","hidden","renderDropdown","role","tabIndex","Array","from","querySelectorAll","selectedCount","selectedOption","textContent","trim","indexOf","getElement","style"],"mappings":"gHAAA,sCAAIA,EAAO,IACX,SAASC,IACP,OAAOD,M,gRCCHE,EAAY,+xCAEZC,EAAa,WACjB,WAAYC,GAAS,kCACnBC,eAAiBC,KAAMF,GACvBE,KAAKC,OAASC,eAAYF,KAAM,SAAU,GAC1CA,KAAKG,cAAe,EACpBH,KAAKN,KAAOC,iBACZK,KAAKI,cAAgB,GACrBJ,KAAKK,qBAAuB,IAC5BL,KAAKM,cAAgB,WACd,EAAKH,eAEV,EAAKA,cAAe,EAChB,EAAKI,eACP,EAAKA,aAAaC,QAAS,EAC3B,EAAKC,eAAiB,MAG1BT,KAAKU,qBAAuB,WAC1BC,YAAW,WACT,EAAKP,cAAcQ,SAAQ,SAAAC,GACzBA,SAED,EAAKR,uBAEVL,KAAKc,aAAe,WAClB,EAAKX,cAAgB,EAAKA,cAE5BH,KAAKe,eAAiB,SAACC,GACH,QAAdA,EAAMC,KAAiB,EAAKd,cAC9Ba,EAAME,kBAIVlB,KAAKmB,aAAe,SAACH,GACnB,IAAMC,EAAMD,EAAMC,IACZG,EAAkB,CACtB,UACA,YACA,OACA,OACAC,SAASJ,GACX,GAAIG,GAAmB,EAAKE,eAAeC,OAAS,EAGlD,OAFAP,EAAME,sBACN,EAAKM,uBAAuBP,GAG1B,CAAC,IAAK,SAASI,SAASJ,IAAQ,EAAKV,aACvC,EAAKkB,gBAAgB,EAAKlB,aAAamB,OAG7B,WAART,GACF,EAAKX,iBAITN,KAAK2B,cAAgB,SAACX,GACpB,IAAMY,EAASZ,EAAMa,OACI,mBAArBD,EAAOE,WAEX,EAAKL,gBAAgBG,EAAOF,QAE9B1B,KAAK+B,mBAAqB,WACxB,EAAKT,eAAeV,SAAQ,SAACgB,EAAQI,GACnCJ,EAAOK,GAAP,yBAA8B,EAAKvC,KAAnC,mBAAkDsC,MAEpD,EAAKE,iBAjEQ,mEAqEf,IAAMC,EAAmB,IAAIC,iBAAiBpC,KAAK+B,oBACnDI,EAAiBE,QAAQrC,KAAKsC,YAAa,CACzCC,WAAW,EACXC,SAAS,IAEXxC,KAAK+B,qBACL/B,KAAKmC,iBAAmBA,IA3ET,2CAgHInB,GACfhB,KAAKyC,SACPzC,KAAK0C,gBAAkB1B,EAAM2B,OAAOD,gBAGtC1C,KAAK0B,MAAQV,EAAM2B,OAAOjB,QArHX,4CAwHf1B,KAAKI,cAAgB,KAxHN,2CA0HI,WACnBJ,KAAKI,cAAcwC,MAAK,WACtB,EAAKtC,mBAEPN,KAAKU,yBA9HU,sCAiIXV,KAAKyC,SACPzC,KAAK6C,sBAAsB7C,KAAK0C,iBAGhC1C,KAAK8C,oBAAoB9C,KAAK0B,SArIjB,0CAwIGA,GAClB,GAAI1B,KAAKyC,SACPM,QAAQC,MAAM,4HAGhB,GAAItB,EACF1B,KAAKsB,eAAeV,SAAQ,SAAAgB,GAC1BA,EAAOqB,SAAWrB,EAAOF,QAAUA,SAFvC,CAMA,IAAMwB,EAAoBlD,KAAKsB,eAAe6B,MAAK,SAAAvB,GAAM,OAAIA,EAAOqB,YAChEC,IACFlD,KAAK0B,MAAQwB,EAAkBxB,UArJlB,4CAwJKgB,GACf1C,KAAKyC,SAINC,EACF1C,KAAKsB,eAAeV,SAAQ,SAAAgB,GAC1BA,EAAOqB,SAAWP,EAAgBrB,SAASO,EAAOF,UAItD1B,KAAK0C,gBAAkB1C,KAAKsB,eACzB8B,QAAO,SAAAxB,GAAM,OAAIA,EAAOqB,YACxBI,KAAI,SAAAzB,GAAM,OAAIA,EAAOF,SAXtBqB,QAAQC,MAAM,0HA1JD,8CAuKO,MAChBM,EAAY,UAAGtD,KAAKsB,eAAe6B,MAAK,SAAAvB,GAAM,OAAIA,EAAOqB,mBAA7C,QAChBjD,KAAKsB,eAAe,GACtBgC,EAAa9C,QAAS,EACtBR,KAAKS,eAAiB6C,EAAarB,KA3KpB,6CA6KMhB,GAAiD,IAA5CsC,EAA4C,uDAAxBvD,KAAKuD,kBACnD,IAAKvD,KAAKG,aAGR,OAFAH,KAAKG,cAAe,OACpBH,KAAKwD,wBAGP,GAAKxD,KAAKO,aAAV,CAIA,IAAMkD,EAAkBzD,KAAKsB,eAAeC,OAAS,EACjDmC,EAAc,EAClB,OAAQzC,GACN,IAAK,YACHyC,EACEH,EAAoBE,EAChBF,EAAoB,EACpBA,EACN,MACF,IAAK,UACHG,EAAcH,EAAoB,EAAIA,EAAoB,EAAI,EAC9D,MACF,IAAK,OACHG,EAAc,EACd,MACF,IAAK,MACHA,EAAcD,EACd,MAEJ,GAAIC,IAAgB1D,KAAKuD,kBAAmB,CAC1C,IAAMD,EAAetD,KAAKsB,eAAeoC,GACzC,GAAIJ,EAAaK,UAAYL,EAAaM,cAKxC,YAJIN,IAAiBtD,KAAKsB,eAAe,IACvCgC,IAAiBtD,KAAKsB,eAAemC,IACrCzD,KAAKwB,uBAAuBP,EAAKyC,IAIrC1D,KAAKO,aAAaC,QAAS,EAC3B8C,EAAa9C,QAAS,EACtBR,KAAKS,eAAiB6C,EAAarB,GACnCjC,KAAKO,aAAasD,eAAe,CAC/BC,SAAU,SACVC,MAAO,kBApCT/D,KAAKwD,0BApLQ,sCA4ND9B,GACV1B,KAAKyC,SACPzC,KAAKgE,qBAAqBtC,GAG5B1B,KAAKiE,sBAAsBvC,KAjOZ,4CAmOKA,GAChBA,IAAU1B,KAAK0B,OACjB1B,KAAKC,OAAOiE,KAAK,CAAExC,UAErB1B,KAAKM,kBAvOU,2CAyOIoB,GACnB,IAAIgB,EAAkB,eAAI1C,KAAK0C,iBAC3BA,EAAgBrB,SAASK,GAC3BgB,EAAkBA,EAAgBU,QAAO,SAAAxB,GAAM,OAAIA,IAAWF,KAG9DgB,EAAgBE,KAAKlB,GAEvB1B,KAAKC,OAAOiE,KAAK,CAAExB,sBAjPJ,+BAoPf,OAAQyB,eAAE,MAAO,CAAEC,MAAO,oBAAsBD,eAAE,gBAAiB,CAAEzC,MAAO1B,KAAKqE,aAAcC,MAAOtE,KAAKsE,MAAOC,SAAUvE,KAAKuE,SAAUC,OAAQxE,KAAKwE,OAAQb,SAAU3D,KAAK2D,SAAUc,UAAU,EAAM,qBAAqB,EAAMC,UAAW1E,KAAK2E,gBAAiBC,aAAc,UAAWC,aAAc7E,KAAKG,aAAc2E,QAAS9E,KAAKc,aAAciE,QAAS/E,KAAKmB,aAAc6D,UAAWhF,KAAKe,iBAAmBoD,eAAE,eAAgB,CAAEC,MAAO,sBAAuBa,KAAM,iBAAmBd,eAAE,MAAO,CAAEC,MAAO,2BAA4Bc,QAASlF,KAAKG,eAAiBH,KAAKmF,oBApPxiB,uCAuPf,OAAQhB,eAAE,MAAO,CAAEC,MAAO,2CAA4CgB,KAAM,UAAW,aAAcpF,KAAKsE,MAAOe,UAAW,EAAG,wBAAyBrF,KAAKS,eAAgByE,QAASlF,KAAKG,aAAc2E,QAAS9E,KAAK2B,eAAiBwC,eAAE,OAAQ,SAvPnO,sCA6EK,MACpB,OAAInE,KAAKsE,MACA,KACT,UAAOtE,KAAK0E,iBAAZ,QAAyB,OAhFV,qCAmFf,OAAOY,MAAMC,KAAKvF,KAAKsC,YAAYkD,iBAAiB,qBAnFrC,mCAqFE,WACjB,GAAIxF,KAAKyC,SAAU,CACjB,IAAMgD,EAAgBzF,KAAK0C,gBAAgBnB,OAC3C,GAAsB,IAAlBkE,EACF,MAAO,GACT,GAAsB,IAAlBA,EAAqB,OACjBC,EAAiB1F,KAAKsB,eAAe6B,MAAK,SAAAvB,GAAM,OAAIA,EAAOF,QAAU,EAAKgB,gBAAgB,MAChG,wBAAQgD,QAAR,IAAQA,OAAR,EAAQA,EAAgBpB,aAAxB,SACiB,OAAdoB,QAAc,IAAdA,OAAA,EAAAA,EAAgBC,YAAYC,UAA5B,OACCF,QADD,IACCA,OADD,EACCA,EAAgBhE,QAChB1B,KAAK0C,gBAAgB,GAE3B,gBAAU+C,EAAV,aAEF,IACoB,EADdC,EAAiB1F,KAAKsB,eAAe6B,MAAK,SAAAvB,GAAM,OAAIA,EAAOqB,YACjE,OAAIyC,EACF,UAAQA,EAAepB,aAAvB,QACGoB,EAAeC,YAAYC,QAAUF,EAAehE,MAElD1B,KAAK0B,QAxGG,mCA2Gf,OAAO1B,KAAKsB,eAAe6B,MAAK,SAAAvB,GAAM,OAAIA,EAAOpB,YA3GlC,wCA8Gf,OAAOR,KAAKsB,eAAeuE,QAAQ7F,KAAKO,gBA9GzB,kCAyPG,OAAOuF,eAAW9F,SAzPrB,gCA0PO,MAAO,CAC7B,SAAY,CAAC,iBACb,MAAS,CAAC,uBACV,gBAAmB,CAAC,8BA7PL,KAgQnBH,EAAckG,MAAQnG","file":"js/chunk-bcd6f08a.1ef6b7b0.js","sourcesContent":["let guid = 1000;\nfunction createGuid() {\n  return guid++;\n}\n\nexport { createGuid as c };\n","import { r as registerInstance, e as createEvent, h, g as getElement } from './index-499de8b5.js';\nimport { c as createGuid } from './utils-9777d7c1.js';\n\nconst stylesCss = \"*{box-sizing:border-box}input,button{font-family:inherit;font-size:inherit}button{cursor:pointer;background:none;border:none}:host(.sr),:host(.sr) button{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.sr,.sr button{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.hidden{display:none}:host([hidden]){display:none}.invisible{visibility:hidden}:host{display:block}.select-container{position:relative;margin:1rem}protean-input{margin:0}.protean-select-icon{position:absolute;right:0.75rem;bottom:0.5rem}:host([disabled]) .protean-select-icon{opacity:0.4;cursor:not-allowed}.protean-dropdown{position:absolute;z-index:2;top:calc(100% - 3px);width:100%;background-color:var(--protean-dropdown-background-color);color:var(--protean-dropdown-text-color);border-width:var(--protean-dropdown-border-width);border-style:solid;border-color:var(--protean-dropdown-border-color, currentColor);border-radius:0 0 2px 2px;box-shadow:var(--protean-dropdown-box-shadow);max-height:250px;overflow-y:scroll}.protean-select-separator{height:1px;width:calc(100% - 20px);margin:0 auto;position:relative;top:-2px;z-index:3;background-color:var(--protean-select-separator-color)}\";\n\nconst ProteanSelect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.change = createEvent(this, \"change\", 3);\n    this.dropdownOpen = false;\n    this.guid = createGuid();\n    this.functionQueue = [];\n    this.functionQueueTimeout = 200;\n    this.closeDropdown = () => {\n      if (!this.dropdownOpen)\n        return;\n      this.dropdownOpen = false;\n      if (this.activeOption) {\n        this.activeOption.active = false;\n        this.activeOptionId = '';\n      }\n    };\n    this.executeFunctionQueue = () => {\n      setTimeout(() => {\n        this.functionQueue.forEach(fn => {\n          fn();\n        });\n      }, this.functionQueueTimeout); // REPLACE with click-elsewhere, timing is inconsistent\n    };\n    this.onInputClick = () => {\n      this.dropdownOpen = !this.dropdownOpen;\n    };\n    this.onInputKeyDown = (event) => {\n      if (event.key === 'Tab' && this.dropdownOpen) {\n        event.preventDefault();\n        return;\n      }\n    };\n    this.onInputKeyUp = (event) => {\n      const key = event.key;\n      const isNavigationKey = [\n        'ArrowUp',\n        'ArrowDown',\n        'Home',\n        'End',\n      ].includes(key);\n      if (isNavigationKey && this.optionElements.length > 0) {\n        event.preventDefault();\n        this.handleOptionNavigation(key);\n        return;\n      }\n      if ([' ', 'Enter'].includes(key) && this.activeOption) {\n        this.handleSelection(this.activeOption.value);\n        return;\n      }\n      if (key === 'Escape') {\n        this.closeDropdown();\n        return;\n      }\n    };\n    this.onOptionClick = (event) => {\n      const option = event.target;\n      if (option.localName !== 'protean-option')\n        return;\n      this.handleSelection(option.value);\n    };\n    this.onMutationObserved = () => {\n      this.optionElements.forEach((option, index) => {\n        option.id = `protean-select-${this.guid}-option-${index}`;\n      });\n      this.updateOptions();\n    };\n  }\n  componentWillLoad() {\n    const mutationObserver = new MutationObserver(this.onMutationObserved);\n    mutationObserver.observe(this.hostElement, {\n      childList: true,\n      subtree: true,\n    });\n    this.onMutationObserved();\n    this.mutationObserver = mutationObserver;\n  }\n  get selectAriaLabel() {\n    if (this.label)\n      return null;\n    return this.ariaLabel ?? null;\n  }\n  get optionElements() {\n    return Array.from(this.hostElement.querySelectorAll('protean-option'));\n  }\n  get displayValue() {\n    if (this.multiple) {\n      const selectedCount = this.selectedOptions.length;\n      if (selectedCount === 0)\n        return '';\n      if (selectedCount === 1) {\n        const selectedOption = this.optionElements.find(option => option.value === this.selectedOptions[0]);\n        return (selectedOption?.label ??\n          (selectedOption?.textContent.trim() ||\n            selectedOption?.value ||\n            this.selectedOptions[0]));\n      }\n      return `${selectedCount} selected`;\n    }\n    const selectedOption = this.optionElements.find(option => option.selected);\n    if (selectedOption) {\n      return (selectedOption.label ??\n        (selectedOption.textContent.trim() || selectedOption.value));\n    }\n    return this.value;\n  }\n  get activeOption() {\n    return this.optionElements.find(option => option.active);\n  }\n  get activeOptionIndex() {\n    return this.optionElements.indexOf(this.activeOption);\n  }\n  defaultChangeHandler(event) {\n    if (this.multiple) {\n      this.selectedOptions = event.detail.selectedOptions;\n      return;\n    }\n    this.value = event.detail.value;\n  }\n  defaultFocusHandler() {\n    this.functionQueue = [];\n  }\n  defaultBlurHandler() {\n    this.functionQueue.push(() => {\n      this.closeDropdown();\n    });\n    this.executeFunctionQueue();\n  }\n  updateOptions() {\n    if (this.multiple) {\n      this.updateMultipleOptions(this.selectedOptions);\n    }\n    else {\n      this.updateSingleOptions(this.value);\n    }\n  }\n  updateSingleOptions(value) {\n    if (this.multiple) {\n      console.error('`value` should not be used on `protean-select` elements where `multiple` is `true`.  Use `selectedOptions` instead.');\n      return;\n    }\n    if (value) {\n      this.optionElements.forEach(option => {\n        option.selected = option.value === value;\n      });\n      return;\n    }\n    const preSelectedOption = this.optionElements.find(option => option.selected);\n    if (preSelectedOption) {\n      this.value = preSelectedOption.value;\n    }\n  }\n  updateMultipleOptions(selectedOptions) {\n    if (!this.multiple) {\n      console.error('`selectedOptions` should not be used on `protean-select` elements where `multiple` is `false`.  Use `value` instead.');\n      return;\n    }\n    if (selectedOptions) {\n      this.optionElements.forEach(option => {\n        option.selected = selectedOptions.includes(option.value);\n      });\n      return;\n    }\n    this.selectedOptions = this.optionElements\n      .filter(option => option.selected)\n      .map(option => option.value);\n  }\n  activateDefaultOption() {\n    const targetOption = this.optionElements.find(option => option.selected) ??\n      this.optionElements[0]; //add protections against disabled starting point\n    targetOption.active = true;\n    this.activeOptionId = targetOption.id;\n  }\n  handleOptionNavigation(key, activeOptionIndex = this.activeOptionIndex) {\n    if (!this.dropdownOpen) {\n      this.dropdownOpen = true;\n      this.activateDefaultOption();\n      return;\n    }\n    if (!this.activeOption) {\n      this.activateDefaultOption();\n      return;\n    }\n    const lastOptionIndex = this.optionElements.length - 1;\n    let targetIndex = 0;\n    switch (key) {\n      case 'ArrowDown':\n        targetIndex =\n          activeOptionIndex < lastOptionIndex\n            ? activeOptionIndex + 1\n            : activeOptionIndex;\n        break;\n      case 'ArrowUp':\n        targetIndex = activeOptionIndex > 0 ? activeOptionIndex - 1 : 0;\n        break;\n      case 'Home':\n        targetIndex = 0;\n        break;\n      case 'End':\n        targetIndex = lastOptionIndex;\n        break;\n    }\n    if (targetIndex !== this.activeOptionIndex) {\n      const targetOption = this.optionElements[targetIndex];\n      if (targetOption.disabled || targetOption.disabledGroup) {\n        if (targetOption !== this.optionElements[0] &&\n          targetOption !== this.optionElements[lastOptionIndex]) {\n          this.handleOptionNavigation(key, targetIndex);\n        }\n        return;\n      }\n      this.activeOption.active = false;\n      targetOption.active = true;\n      this.activeOptionId = targetOption.id;\n      this.activeOption.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n      });\n    }\n  }\n  handleSelection(value) {\n    if (this.multiple) {\n      this.handleMultiSelection(value);\n      return;\n    }\n    this.handleSingleSelection(value);\n  }\n  handleSingleSelection(value) {\n    if (value !== this.value) {\n      this.change.emit({ value });\n    }\n    this.closeDropdown();\n  }\n  handleMultiSelection(value) {\n    let selectedOptions = [...this.selectedOptions];\n    if (selectedOptions.includes(value)) {\n      selectedOptions = selectedOptions.filter(option => option !== value);\n    }\n    else {\n      selectedOptions.push(value);\n    }\n    this.change.emit({ selectedOptions });\n  }\n  render() {\n    return (h(\"div\", { class: \"select-container\" }, h(\"protean-input\", { value: this.displayValue, label: this.label, optional: this.optional, errors: this.errors, disabled: this.disabled, readonly: true, \"suppress-messages\": true, ariaLabel: this.selectAriaLabel, ariaHasPopup: \"listbox\", ariaExpanded: this.dropdownOpen, onClick: this.onInputClick, onKeyUp: this.onInputKeyUp, onKeyDown: this.onInputKeyDown }), h(\"protean-icon\", { class: \"protean-select-icon\", type: \"chevron-down\" }), h(\"div\", { class: \"protean-select-separator\", hidden: !this.dropdownOpen }), this.renderDropdown()));\n  }\n  renderDropdown() {\n    return (h(\"div\", { class: \"protean-select-dropdown protean-dropdown\", role: \"listbox\", \"aria-label\": this.label, tabIndex: -1, \"aria-activedescendant\": this.activeOptionId, hidden: !this.dropdownOpen, onClick: this.onOptionClick }, h(\"slot\", null)));\n  }\n  get hostElement() { return getElement(this); }\n  static get watchers() { return {\n    \"multiple\": [\"updateOptions\"],\n    \"value\": [\"updateSingleOptions\"],\n    \"selectedOptions\": [\"updateMultipleOptions\"]\n  }; }\n};\nProteanSelect.style = stylesCss;\n\nexport { ProteanSelect as protean_select };\n"],"sourceRoot":""}