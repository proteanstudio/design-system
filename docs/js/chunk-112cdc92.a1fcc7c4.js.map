{"version":3,"sources":["webpack:///../protean-elements/dist/esm/protean-checkbox.entry.js","webpack:///../protean-elements/dist/esm/utils-9777d7c1.js"],"names":["stylesCss","ProteanCheckbox","hostRef","registerInstance","this","change","createEvent","checked","guid","createGuid","onCheckboxChange","event","emit","target","hostElement","onchange","detail","h","class","type","id","checkboxId","checkboxAriaLabel","indeterminate","onChange","htmlFor","checkboxAlignment","renderSymbol","label","x1","y1","x2","y2","points","viewBox","xmlns","focusable","x","y","width","height","rx","renderStandardFill","version","cx","cy","r","renderToggle","renderStandard","ariaLabel","includes","alignment","getElement","style"],"mappings":"sOAGMA,EAAY,+oDAEZC,EAAe,WACnB,WAAYC,GAAS,kCACnBC,eAAiBC,KAAMF,GACvBE,KAAKC,OAASC,eAAYF,KAAM,SAAU,GAC1CA,KAAKG,SAAU,EACfH,KAAKI,KAAOC,iBACZL,KAAKM,iBAAmB,SAACC,GACvB,EAAKN,OAAOO,KAAK,CACfL,QAASI,EAAME,OAAON,WART,oEAYEI,GACfA,EAAME,SAAWT,KAAKU,aAAgBV,KAAKU,YAAYC,WACzDX,KAAKG,QAAUI,EAAMK,OAAOT,WAdb,+BA+BjB,OAAQU,eAAE,MAAO,CAAEC,MAAO,sBAAwBD,eAAE,QAAS,CAAEC,MAAO,KAAMC,KAAM,WAAYC,GAAIhB,KAAKiB,WAAY,aAAcjB,KAAKkB,kBAAmBf,QAASH,KAAKG,SAAWH,KAAKmB,cAAeC,SAAUpB,KAAKM,mBAAqBO,eAAE,QAAS,CAAEQ,QAASrB,KAAKiB,WAAYH,MAAO,aAAF,OAAed,KAAKsB,oBAAuBtB,KAAKuB,iBAAkBvB,KAAKwB,OAAUX,eAAE,OAAQ,CAAEC,MAAO,cAAgBd,KAAKwB,WA/B9X,2CAkCjB,OAAIxB,KAAKmB,cACCN,eAAE,OAAQ,CAAEC,MAAO,8BAA+BW,GAAI,IAAKC,GAAI,KAAMC,GAAI,KAAMC,GAAI,KAAM,eAAgB,MAE/G5B,KAAKG,QACCU,eAAE,WAAY,CAAEC,MAAO,wBAAyBe,OAAQ,0EADlE,IArCiB,uCA0CjB,OAAQhB,eAAE,MAAO,CAAEC,MAAO,2BAA4BgB,QAAS,YAAaC,MAAO,6BAA8BC,UAAW,QAAS,cAAe,QAAUnB,eAAE,OAAQ,CAAEC,MAAO,mBAAoBmB,EAAG,IAAKC,EAAG,IAAKC,MAAO,KAAMC,OAAQ,KAAMC,GAAI,MAAQrC,KAAKsC,wBA1ChP,qCA6CjB,OAAQzB,eAAE,MAAO,CAAEC,MAAO,yBAA0BgB,QAAS,YAAaS,QAAS,MAAOR,MAAO,6BAA8BC,UAAW,QAAS,cAAe,QAAUnB,eAAE,OAAQ,CAAEC,MAAO,cAAeW,GAAI,KAAMC,GAAI,KAAMC,GAAI,KAAMC,GAAI,OAASf,eAAE,SAAU,CAAEC,MAAO,cAAe0B,GAAI,KAAMC,GAAI,KAAMC,EAAG,SA7CnS,qCAgDjB,MAAkB,WAAd1C,KAAKe,KACAf,KAAK2C,eAEP3C,KAAK4C,mBAnDK,iCAkBjB,yBAAmB5C,KAAKI,QAlBP,wCAoBK,MACtB,OAAIJ,KAAKwB,MACA,KACT,UAAOxB,KAAK6C,iBAAZ,QAAyB,OAvBR,wCA0BjB,MAAO,CAAC,OAAQ,SAASC,SAAS9C,KAAK+C,WACnC/C,KAAK+C,UACL,SA5Ba,kCAqDC,OAAOC,eAAWhD,UArDnB,KAuDrBH,EAAgBoD,MAAQrD,G,kCC5DxB,sCAAIQ,EAAO,IACX,SAASC,IACP,OAAOD","file":"js/chunk-112cdc92.a1fcc7c4.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, g as getElement } from './index-499de8b5.js';\nimport { c as createGuid } from './utils-9777d7c1.js';\n\nconst stylesCss = \"*{box-sizing:border-box}input,button{font-family:inherit;font-size:inherit}button{cursor:pointer;background:none;border:none}:host(.sr),:host(.sr) button{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.sr,.sr button{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.hidden{display:none}:host([hidden]){display:none}.invisible{visibility:hidden}:host{display:block;margin:1rem 0.5rem}:host([disabled]) label{cursor:not-allowed;opacity:0.5}label{display:inline-flex;align-items:center;cursor:pointer}:host([alignment='right']) label{flex-direction:row-reverse;justify-content:flex-end}.checkbox-symbol{flex:0 0 24px;margin-right:0.625rem;stroke-linecap:round;stroke-linejoin:round}:host([alignment='right']) .checkbox-symbol{margin-left:0.625rem;margin-right:0}input:focus+label .checkbox-symbol{outline:auto}.checkbox-outline{fill:transparent;stroke:var(--action-color);stroke-width:2;transition:fill 0.2s ease-in-out}:host([checked]) .checkbox-outline,:host([indeterminate]) .checkbox-outline{fill:var(--action-color)}.checkbox-fill{stroke:var(--action-contrast-color);fill:none;stroke-width:3}:host([type='toggle']) .checkbox-symbol{flex-basis:45px;border-radius:10px}.toggle-path{stroke:var(--protean-checkbox-toggle-path-color);stroke-width:20;fill:none;transition:stroke 0.2s ease-in-out}:host([checked]) .toggle-path{stroke:var(--action-color)}.toggle-fill{fill:var(--action-contrast-color);stroke:none;transition:transform 0.2s ease-in-out}:host([checked]) .toggle-fill{transform:translateX(25px)}.label-text{flex:1 0}\";\n\nconst ProteanCheckbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.change = createEvent(this, \"change\", 7);\n    this.checked = false;\n    this.guid = createGuid();\n    this.onCheckboxChange = (event) => {\n      this.change.emit({\n        checked: event.target.checked,\n      });\n    };\n  }\n  defaultChangeHandler(event) {\n    if (event.target === this.hostElement && !this.hostElement.onchange) {\n      this.checked = event.detail.checked;\n    }\n  }\n  get checkboxId() {\n    return `checkbox-${this.guid}`;\n  }\n  get checkboxAriaLabel() {\n    if (this.label)\n      return null;\n    return this.ariaLabel ?? null;\n  }\n  get checkboxAlignment() {\n    return ['left', 'right'].includes(this.alignment)\n      ? this.alignment\n      : 'left';\n  }\n  render() {\n    return (h(\"div\", { class: \"checkbox-container\" }, h(\"input\", { class: \"sr\", type: \"checkbox\", id: this.checkboxId, \"aria-label\": this.checkboxAriaLabel, checked: this.checked || this.indeterminate, onChange: this.onCheckboxChange }), h(\"label\", { htmlFor: this.checkboxId, class: `alignment-${this.checkboxAlignment}` }, this.renderSymbol(), !!this.label && (h(\"span\", { class: \"label-text\" }, this.label)))));\n  }\n  renderStandardFill() {\n    if (this.indeterminate) {\n      return (h(\"line\", { class: \"checkbox-fill indeterminate\", x1: \"6\", y1: \"12\", x2: \"18\", y2: \"12\", \"stroke-width\": \"3\" }));\n    }\n    if (this.checked) {\n      return (h(\"polyline\", { class: \"checkbox-fill checked\", points: \"4.76755287 13.3616687 9.85401316 18.3300512 19.438211 5.92818154\" }));\n    }\n  }\n  renderStandard() {\n    return (h(\"svg\", { class: \"checkbox-symbol standard\", viewBox: \"0 0 24 24\", xmlns: \"http://www.w3.org/2000/svg\", focusable: \"false\", \"aria-hidden\": \"true\" }, h(\"rect\", { class: \"checkbox-outline\", x: \"1\", y: \"1\", width: \"22\", height: \"22\", rx: \"2\" }), this.renderStandardFill()));\n  }\n  renderToggle() {\n    return (h(\"svg\", { class: \"checkbox-symbol toggle\", viewBox: \"0 0 45 20\", version: \"1.1\", xmlns: \"http://www.w3.org/2000/svg\", focusable: \"false\", \"aria-hidden\": \"true\" }, h(\"line\", { class: \"toggle-path\", x1: \"10\", y1: \"10\", x2: \"35\", y2: \"10\" }), h(\"circle\", { class: \"toggle-fill\", cx: \"10\", cy: \"10\", r: \"8\" })));\n  }\n  renderSymbol() {\n    if (this.type === 'toggle') {\n      return this.renderToggle();\n    }\n    return this.renderStandard();\n  }\n  get hostElement() { return getElement(this); }\n};\nProteanCheckbox.style = stylesCss;\n\nexport { ProteanCheckbox as protean_checkbox };\n","let guid = 1000;\nfunction createGuid() {\n  return guid++;\n}\n\nexport { createGuid as c };\n"],"sourceRoot":""}