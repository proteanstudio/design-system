{"version":3,"sources":["webpack:///./src/routes/protean-input/template.html","webpack:///./src/routes/protean-input/scripts.ts","webpack:///./src/routes/protean-input/index.vue","webpack:///./src/routes/protean-input/styles.scss"],"names":["class","data-in-page-anchor","label","demoType","undefined","type","suppressMessages","demoSuppressMessages","optional","demoOptional","disabled","demoDisabled","readonly","demoReadonly","format","demoFormat","maxlength","demoMaxlength","spamErrors","demoHints","demoErrors","variant","demoShowErrors","$event","detail","checked","value","demoTypes","children","demoFormats","substitutions","language","dateFormats","demoErrorsList","demoNumericFormats","colorCodeFormats","apiFormat","formatMap","numeric","this","date","arrayLength","Math","round","random","errorList","Array","fill","map","i","index","components","CodeSnippet","render"],"mappings":"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","file":"js/chunk-4bae6e17-legacy.96af20f6.js","sourcesContent":["<h1>Input field</h1>\n<p>\n    Input fields allow users to enter information. This element supports\n    several input formatting options.\n</p>\n\n<section class=\"overview-content\">\n    <h2 data-in-page-anchor=\"overview\">Overview</h2>\n    <div class=\"overview-demo\">\n        <protean-input\n            class=\"overview-demo-element\"\n            :label=\"demoType === 'color' ? undefined : 'Field label'\"\n            :type=\"demoType\"\n            v-prop:hints=\"demoHints\"\n            v-prop:errors=\"demoErrors\"\n            :suppressMessages=\"demoSuppressMessages\"\n            :optional=\"demoOptional\"\n            :disabled=\"demoDisabled\"\n            :readonly=\"demoReadonly\"\n            :format=\"demoFormat\"\n            :maxlength=\"demoMaxlength\"\n            @input=\"spamErrors\"\n        ></protean-input>\n    </div>\n    <div class=\"overview-demo-controls\">\n        <protean-checkbox\n            class=\"demo-toggle-errors\"\n            label=\"Populate validation errors\"\n            variant=\"toggle\"\n            v-prop:checked=\"demoShowErrors\"\n            @change=\"demoShowErrors = $event.detail.checked\"\n        ></protean-checkbox>\n        <protean-checkbox\n            class=\"demo-toggle-messages\"\n            label=\"Hide hints and errors\"\n            variant=\"toggle\"\n            v-prop:checked=\"demoSuppressMessages\"\n            @change=\"demoSuppressMessages = $event.detail.checked\"\n        ></protean-checkbox>\n        <protean-checkbox\n            class=\"demo-toggle-optional\"\n            label=\"Show as optional\"\n            variant=\"toggle\"\n            v-prop:checked=\"demoOptional\"\n            @change=\"demoOptional = $event.detail.checked\"\n        ></protean-checkbox>\n        <protean-checkbox\n            class=\"demo-toggle-disabled\"\n            label=\"Show as disabled\"\n            variant=\"toggle\"\n            v-prop:checked=\"demoDisabled\"\n            @change=\"demoDisabled = $event.detail.checked\"\n        ></protean-checkbox>\n        <protean-checkbox\n            class=\"demo-toggle-readonly\"\n            label=\"Show as readonly\"\n            variant=\"toggle\"\n            v-prop:checked=\"demoReadonly\"\n            @change=\"demoReadonly = $event.detail.checked\"\n        ></protean-checkbox>\n        <protean-input\n            class=\"demo-input-maxlength\"\n            label=\"Input maxlength\"\n            type=\"numeric\"\n            format=\"integer\"\n            maxlength=\"3\"\n            :value=\"demoMaxlength\"\n            @change=\"demoMaxlength = $event.detail.value\"\n        ></protean-input>\n        <protean-select\n            class=\"demo-select-type\"\n            @change=\"demoType = $event.detail.value\"\n            :value=\"demoType\"\n            label=\"Input type\"\n        >\n            <protean-optgroup\n                v-for=\"{label, children} in demoTypes\"\n                :label=\"label\"\n            >\n                <protean-option\n                    v-for=\"{value, label} in children\"\n                    :value=\"value\"\n                    :label=\"label\"\n                    >{{label}}</protean-option\n                >\n            </protean-optgroup>\n        </protean-select>\n        <protean-select\n            class=\"demo-select-format\"\n            :value=\"demoFormat\"\n            label=\"Input format\"\n            v-if=\"demoFormats\"\n            @change=\"demoFormat = $event.detail.value\"\n        >\n            <protean-option\n                v-for=\"format in demoFormats\"\n                :value=\"format\"\n                :label=\"format\"\n                >{{format}}</protean-option\n            >\n        </protean-select>\n    </div>\n    <div class=\"overview-demo-snippet\">\n        <code-snippet\n            :substitutions='[demoType === \"color\" ? \"\" : \"label=\\\"Field label\\\" \\n\", demoType, demoFormat ? `\\n format=\"${demoFormat}\"` : \"\", `\\n maxlength=\"${demoMaxlength}\"`,   demoSuppressMessages ? \"\\n suppress-messages\" : \"\",demoOptional ? \"\\n optional\" : \"\", demoDisabled ? \"\\n disabled\" : \"\", demoReadonly ? \"\\n readonly\" : \"\"]'\n        >\n            {{`<protean-input\n                {0}type=\"{1}\" {2}{3}{4}{5}{6}{7}\n            ></protean-input>\n            `}}\n        </code-snippet>\n    </div>\n</section>\n\n<section class=\"best-practices-content\">\n    <h2 data-in-page-anchor=\"best-practices\">Best practices</h2>\n    <section>\n        <h3>Use short, clear field labels.</h3>\n        <ul>\n            <li>The label should make it obvious what information is being requested.</li>\n        </ul>\n    </section>\n    <section>\n        <h3>No placeholder text</h3>\n        <p>The <code>protean-input</code> element does not support placeholder text for the following reasons:</p>\n        <ul>\n            <li>Placeholder text often fails to meet minimum contrast requirements</li>\n            <li>Fields with placeholder text appear completed, and users may mistakenly overlook them</li>\n        </ul>\n    </section>\n    <section>\n        <h3>Only ask for input you actually need</h3>\n        <ul>\n            <li>Users are more likely to complete forms with fewer fields, and to make fewer errors when doing so.</li>\n            <li>If you must include optional fields in your form, use the <code>optional</code> attribute to clearly distinguish them from required fields.</li>\n        </ul>\n    </section>\n    <section>\n        <h3>Assist the user with inline hints and error messages</h3>\n        <ul>\n            <li>Communicate unique or complex input requirements with the <code>hints</code> array. These hints are displayed when the input field is focused.</li>\n            <li>Provide inline validation feedback with the <code>errors</code> array. Like hints, these error messages are displayed while the input is focused.</li>\n            <li>Input fields with at least one item in the <code>errors</code> array also receive styles to make them easy to find when scanning the form.</li>\n        </ul>\n    </section>\n    <section>\n        <h3>Use the appropriate input field type for the kind of data you expect.</h3>\n        <ul>\n            <li>Choosing the right input field type is particularly useful for users on mobile devices and those using assistive technology: mobile devices display keyboards optimized for each input type, and many screen readers have input modes specific to a given input type.</li>\n        </ul>\n    </section>\n    \n</section>\n\n<section>\n    <h2 data-in-page-anchor=\"api\">API</h2>\n    <section>\n        <h3>Properties</h3>\n        <div>\n            In the following examples, <code>element</code> refers to an\n            instance of <code>protean-input</code> (i.e.\n            <code\n                >element = document.querySelector('protean-input#myInput')</code\n            >).\n        </div>\n        <ul class=\"prop-list\">\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">value</h4>\n                    <div class=\"prop-type\"><code>string</code></div>\n                    <div class=\"prop-desc\">The value of the input.</div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        element.value = '02/09/2021';\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">label</h4>\n                    <div class=\"prop-type\"><code>string</code></div>\n                    <div class=\"prop-attribute\">\n                        Attribute name: <code>label</code>\n                    </div>\n                    <div class=\"prop-desc\">\n                        The visible label for the input.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        element.label = 'Field label';\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">a11yLabel</h4>\n                    <div class=\"prop-type\"><code>string</code></div>\n                    <div class=\"prop-attribute\">\n                        Attribute name: <code>a11y-label</code>\n                    </div>\n                    <div class=\"prop-desc\">\n                        The label read by assistive technologies for the input; <code>a11yLabel</code> is used here instead of <code>ariaLabel</code> to prevent double readings of the text by those technologies.\n                        Note: when <code>label</code> is set, this value will\n                        not be bound to the field.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        element.a11yLabel = 'Field aria-label';\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">type</h4>\n                    <div class=\"prop-type\">\n                        <code>\"text\"</code> (default) | <code>\"tel\"</code> |\n                        <code>\"number\"</code> | <code>\"password\"</code> |\n                        <code>\"search\"</code> | <code>\"phone\"</code> |\n                        <code>\"numeric\"</code> |\n                        <code>\"date\"</code>\n                    </div>\n                    <div class=\"prop-attribute\">\n                        Attribute name: <code>type</code>\n                    </div>\n                    <div class=\"prop-desc\">\n                        The type of input used. <code>phone</code>,\n                        <code>date</code>, and <code>numeric</code> types\n                        provide text formatting and have some settable\n                        <code>format</code>s.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        element.type = 'tel';\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">format</h4>\n                    <div class=\"prop-type\">\n                        <code>string</code>\n                    </div>\n                    <div class=\"prop-attribute\">\n                        Attribute name: <code>format</code>\n                    </div>\n                    <div class=\"prop-desc\">\n                        The format of the visible text in the input field.\n                        Allowed values are dependent on type selection. Note\n                        that the visible value may differ from what is set onto\n                        the\n                        <code>value</code> property; when <code>value</code> is\n                        set programmatically, it will automatically be\n                        formatted.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <div class=\"prop-extras\">\n                        <h5><code>numeric</code> formats:</h5>\n                        <ul>\n                            <li><code>integer</code></li>\n                            <li><code>delimited</code></li>\n                            <li>\n                                <code>Ndec</code> where <code>N</code> is a\n                                count of numbers after the decimal.\n                            </li>\n                        </ul>\n                    </div>\n                    <div>\n                        <h5><code>date</code> formats:</h5>\n                        <ul>\n                            <li v-for=\"format in dateFormats\">\n                                <code>{{format}}</code>\n                            </li>\n                        </ul>\n                    </div>\n                    <code-snippet language=\"javascript\">\n                        {{`element.type = 'date';\n                        element.format = 'M/D/YY';`}}\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">optional</h4>\n                    <div class=\"prop-type\">\n                        <code>boolean</code>\n                    </div>\n                    <div class=\"prop-attribute\">\n                        Attribute name: <code>optional</code>\n                    </div>\n                    <div class=\"prop-desc\">\n                        Marks the field as optional to the user by appending\n                        \"(optional)\" to the visible <code>label</code> and to\n                        assistive technologies by setting\n                        <code>aria-required=\"false\"</code>.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        element.optional = true;\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">hints</h4>\n                    <div class=\"prop-type\">\n                        <code>string[]</code>\n                    </div>\n                    <div class=\"prop-desc\">\n                        An array of hints made visible to the user when the\n                        field is focused - hints are also read by assistive\n                        technologies.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        element.hints = [ 'Hint #1', ' Hint #2' ];\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">errors</h4>\n                    <div class=\"prop-type\">\n                        <code>string[]</code>\n                    </div>\n                    <div class=\"prop-desc\">\n                        An array of errors made visible to the user when the\n                        field is focused. When populated, the field border is\n                        changed, an error icon is added, and assistive\n                        technologies are alerted to the invalid state of the\n                        field. Errors take precedence over hints.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        element.errors = [ 'Error #1', ' Error #2' ];\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">suppressMessages</h4>\n                    <div class=\"prop-type\">\n                        <code>boolean</code>\n                    </div>\n                    <div class=\"prop-attribute\">\n                        Attribute name: <code>suppress-messages</code>\n                    </div>\n                    <div class=\"prop-desc\">\n                        Dictates the visibility of <code>hint</code> or\n                        <code>error</code> messages when the field is focused.\n                        Other error state indicators are not affected by this\n                        property.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        element.suppressMessages = true;\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">disabled</h4>\n                    <div class=\"prop-type\">\n                        <code>boolean</code>\n                    </div>\n                    <div class=\"prop-attribute\">\n                        Attribute name: <code>disabled</code>\n                    </div>\n                    <div class=\"prop-desc\">\n                        Disables the field and prevents user interaction.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        element.disabled = true;\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">readonly</h4>\n                    <div class=\"prop-type\">\n                        <code>boolean</code>\n                    </div>\n                    <div class=\"prop-attribute\">\n                        Attribute name: <code>readonly</code>\n                    </div>\n                    <div class=\"prop-desc\">\n                        Prevents editing but, unlike <code>disabled</code>,\n                        allows the field to be focused.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        element.readonly = true;\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">maxlength</h4>\n                    <div class=\"prop-type\">\n                        <code>number</code>\n                    </div>\n                    <div class=\"prop-attribute\">\n                        Attribute name: <code>maxlength</code>\n                    </div>\n                    <div class=\"prop-desc\">\n                        Maximum allowed length of the input value.  This value will be ignored for most formatted input types in favor of the length of the selected format. For <code>numeric</code> formats, this value is adjusted internally to account for any delimiting characters.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        element.maxlength = 20;\n                    </code-snippet>\n                </div>\n            </li>\n        </ul>\n    </section>\n\n    <section>\n        <h3>Events</h3>\n\n        <ul class=\"prop-list\">\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">change</h4>\n                    <div class=\"prop-desc\">\n                        Fires when the field loses focus after having its value\n                        updated.\n\n                        <h5>Event detail</h5>\n                        <code-snippet language=\"typescript\">\n                            {{`event: {\n                                    detail: {\n                                        value: string,\n                                        formattedValue: string,\n                                    } \n                                }`\n                            }}\n                        </code-snippet>\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        {{` function onChange(event) {\n                            this.value = event.detail.value; \n                        } `}}\n                    </code-snippet>\n                    <code-snippet language=\"html\">\n                        {{`\n                        <protean-input\n                            label=\"My input field label\"\n                            onchange=\"onChange(event)\"\n                        ></protean-input>\n                        `}}\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">input</h4>\n                    <div class=\"prop-desc\">\n                        Fires when the user modifies the field value. Useful for\n                        inline field validation.\n\n                        <h5>Event detail</h5>\n                        <code-snippet language=\"typescript\">\n                            {{`event: {\n                                    detail: {\n                                        value: string,\n                                        formattedValue: string,\n                                    } \n                                }`\n                            }}\n                        </code-snippet>\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"javascript\">\n                        {{`function onInput(event) {\n                            const value = event.detail.value;\n                            this.value = value;\n\n                            this.errors = value === '' ? ['My input field label should have a least one character.'] : [];\n                        } `\n                    }}\n                    </code-snippet>\n                    <code-snippet language=\"html\">\n                        {{`\n                        <protean-input\n                            label=\"My input field label\"\n                            oninput=\"onInput(event)\"\n                        ></protean-input>\n                        `}}\n                    </code-snippet>\n                </div>\n            </li>\n        </ul>\n    </section>\n\n    <section>\n        <h3>CSS variables</h3>\n        <p>Listed below are the CSS variables that can be adjusted to alter the <code>protean-input</code> element's appearance along with the default values set in the <code>protean-styles</code> package:</p>\n        <ul class=\"prop-list stacked\">\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">--protean-input-margin</h4>\n                    <div class=\"prop-desc\">\n                        The margin around the <code>protean-input</code> element.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"css\">\n                        --protean-input-margin: 1rem;\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">--protean-input-border-color</h4>\n                    <div class=\"prop-desc\">\n                        The color of the border that wraps the input field and its and label.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"css\">\n                        --protean-input-border-color: currentColor;\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">--protean-input-border-radius</h4>\n                    <div class=\"prop-desc\">\n                        The radius of the border that wraps the input field and its and label.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"css\">\n                        --protean-input-border-radius: 2px;\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">--protean-input-label-font-size</h4>\n                    <div class=\"prop-desc\">\n                        The size of the label text.\n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"css\">\n                        --protean-input-label-font-size: 0.6875rem;\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">--protean-input-label-optional-font-size</h4>\n                    <div class=\"prop-desc\">\n                        The size of the <code>(optional)</code> text within the label. \n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"css\">\n                        --protean-input-label-optional-font-size: 0.625rem;\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">--protean-input-font-size</h4>\n                    <div class=\"prop-desc\">\n                        The size of the text within the input field. \n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"css\">\n                        --protean-input-font-size: 1rem;\n                    </code-snippet>\n                </div>\n            </li>\n            <li class=\"prop-item\">\n                <div class=\"prop-info\">\n                    <h4 class=\"prop-name\">--protean-input-disabled-opacity</h4>\n                    <div class=\"prop-desc\">\n                        The opacity of the field while it is disabled. \n                    </div>\n                </div>\n                <div class=\"prop-example\">\n                    <code-snippet language=\"css\">\n                        --protean-input-disabled-opacity: var(--disabled-opacity);\n                    </code-snippet>\n                </div>\n            </li>\n        </ul>\n    </section>\n</section>\n","import { Options, Vue } from 'vue-class-component';\nimport CodeSnippet from '@/components/code-snippet/index.vue';\nimport { Dict } from '@/types';\n\n@Options({\n    components: { CodeSnippet },\n})\nexport default class ProteanInputRoute extends Vue {\n    demoTypes = [\n        {\n            label: 'Native',\n            children: [\n                {\n                    value: 'text',\n                    label: 'Text (default)',\n                },\n                {\n                    value: 'tel',\n                    label: 'tel',\n                },\n                {\n                    value: 'number',\n                    label: 'number',\n                },\n                {\n                    value: 'password',\n                    label: 'password',\n                },\n                {\n                    value: 'search',\n                    label: 'search',\n                },\n                {\n                    value: 'color',\n                    label: 'color',\n                },\n            ],\n        },\n        {\n            label: 'Formatted',\n            children: [\n                {\n                    value: 'phone',\n                    label: 'phone',\n                },\n                {\n                    value: 'numeric',\n                    label: 'numeric',\n                },\n                {\n                    value: 'date',\n                    label: 'date',\n                },\n                {\n                    value: 'color-code',\n                    label: 'color-code',\n                },\n            ],\n        },\n    ];\n    demoType = 'text';\n    demoHints = ['Hint #1', 'Hint #2'];\n    demoErrorsList = ['Error #1'];\n    demoShowErrors = false;\n    demoSuppressMessages = false;\n    demoOptional = false;\n    demoDisabled = false;\n    demoReadonly = false;\n    demoMaxlength = '20';\n    demoFormat = '';\n    demoNumericFormats = ['integer', 'delimited', '3dec'];\n    dateFormats = [\n        'MM/DD/YYYY',\n        'M/D/YYYY',\n        'MM/DD/YY',\n        'M/D/YY',\n        'MM/YY',\n        'M/YY',\n    ];\n    colorCodeFormats = ['hex', 'hexa', 'rgb'];\n    apiFormat = 'date';\n\n    get demoFormats(): string[] | undefined {\n        const formatMap: Dict<string[]> = {\n            numeric: this.demoNumericFormats,\n            date: this.dateFormats,\n            'color-code': this.colorCodeFormats,\n        };\n\n        return formatMap[this.demoType];\n    }\n\n    get demoErrors(): string[] {\n        if (this.demoShowErrors) return this.demoErrorsList;\n\n        return [];\n    }\n\n    spamErrors(): void {\n        if (!this.demoShowErrors || this.demoSuppressMessages) return;\n\n        const arrayLength = Math.round(Math.random() * 9 + 1);\n\n        const errorList = new Array(arrayLength)\n            .fill('')\n            .map((i, index) => `Error #${index + 1}`);\n\n        this.demoErrorsList = errorList;\n    }\n}\n","import { render } from \"./template.html?vue&type=template&id=2eba8b7a\"\nimport script from \"./scripts.ts?vue&type=script&lang=ts\"\nexport * from \"./scripts.ts?vue&type=script&lang=ts\"\n\nimport \"./styles.scss?vue&type=style&index=0&lang=scss\"\nscript.render = render\n\nexport default script","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./styles.scss?vue&type=style&index=0&lang=scss\""],"sourceRoot":""}