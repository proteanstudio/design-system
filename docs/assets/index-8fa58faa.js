import{V as b,O as y,a as u,b as e,d as s,F as g,i as w,g as T,e as t,w as a,c as m,r as x,j as q,o as h,t as v,_ as M}from"./index-9fab0c87.js";import{C as S}from"./index-299da39d.js";var k=Object.defineProperty,C=Object.getOwnPropertyDescriptor,I=(n,l,p,c)=>{for(var i=c>1?void 0:c?C(l,p):l,d=n.length-1,o;d>=0;d--)(o=n[d])&&(i=(c?o(l,p,i):o(i))||i);return c&&i&&k(l,p,i),i};let _=class extends b{demoType="info";demoTypes=["info","success","warning","error"];demoIsStatus=!1;get demoLevel(){return this.demoIsStatus?"status":"alert"}};_=I([y({components:{CodeSnippet:S}})],_);const O=e("h1",null,"Message",-1),P=e("p",null," Messages present important information about an action, task, or system status. ",-1),j={class:"overview-content"},V=e("h2",{"data-in-page-anchor":"overview"},"Overview",-1),B={class:"overview-demo"},D=["type","level"],L=e("ul",null,[e("li",null,"Message detail #1"),e("li",null,"Message detail #2"),e("li",null,"Message detail #3")],-1),N={class:"overview-demo-controls"},$=["value"],A=["label","value"],U={class:"overview-demo-snippet"},F=m('<section class="best-practices-content"><h2 data-in-page-anchor="best-practices">Best practices</h2><section><h3> Tell the user what happened, <strong>and</strong> what to do next. </h3><ul><li> If the user needs to take action in response to a message, give clear, specific instructions about what to do. </li></ul></section><section><h3>Use the right level of urgency.</h3><ul><li> Messages are interruptive; the level of interruption should match the urgency of the information. </li><li> Informational and success messages rarely require immediate attention, so <code>level=&quot;status&quot;</code> is appropriate. </li><li> Warning and error messages often demand timely action, so use <code>level=&quot;alert&quot;</code> to give it the necessary priority. </li></ul></section><section><h3>Use clear, polite language.</h3><ul><li>Be specific, be concise, and don&#39;t blame the user.</li></ul></section><section><h3>Use messages thoughtfully</h3><ul><li> Messages aren&#39;t effective when they are ignored; don&#39;t annoy or overwhelm the user with too many interruptions. </li></ul></section></section>',1),E=e("h2",{"data-in-page-anchor":"api"},"API",-1),R=e("h3",null,"Properties",-1),W=e("div",null,[s(" In the following examples, "),e("code",null,"element"),s(" refers to an instance of "),e("code",null,"protean-message"),s(" (i.e. "),e("code",null,"element = document.querySelector('protean-message#myMessage')"),s("). ")],-1),z={class:"prop-list"},G={class:"prop-item"},H=m('<div class="prop-info"><h4 class="prop-name">type</h4><div class="prop-type"><code>&quot;info&quot;</code> (default) | <code>&quot;success&quot;</code> | <code>&quot;warning&quot;</code> | <code>&quot;error&quot;</code></div><div class="prop-attribute"> Attribute name: <code>type</code></div><div class="prop-desc"> The visual style of the message. Controls the icon and color used to communicate the intent of the message. </div></div>',1),J={class:"prop-example"},K={class:"prop-item"},Q=m('<div class="prop-info"><h4 class="prop-name">level</h4><div class="prop-type"><code>&quot;alert&quot;</code> (default) | <code>&quot;status&quot;</code></div><div class="prop-attribute"> Attribute name: <code>level</code></div><div class="prop-desc"> Controls the <code>role</code> assigned to the message list, dictating the verbosity of assistive technologies. </div></div>',1),X={class:"prop-example"},Y=e("h3",null,"CSS variables",-1),Z=e("p",null,[s("Listed below are the CSS variables that can be adjusted to alter the appearance of "),e("code",null,"protean-message"),s(". "),e("code",null,"protean-message"),s(" also inherits global status colors. The default values set in the "),e("code",null,"protean-styles"),s(" package are shown in the code snippets.")],-1),ee={class:"prop-list stacked"},se={class:"prop-item"},oe=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-message-margin"),e("div",{class:"prop-desc"},[s(" The margin around the "),e("code",null,"protean-message"),s(" element. ")])],-1),te={class:"prop-example"},ae={class:"prop-item"},ne=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-message-background-color"),e("div",{class:"prop-desc"}," The background color of the message container. ")],-1),le={class:"prop-example"},ie={class:"prop-item"},re=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-message-text-color"),e("div",{class:"prop-desc"}," The text color of the message container. ")],-1),ce={class:"prop-example"},pe={class:"prop-item"},de=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-message-border-color"),e("div",{class:"prop-desc"}," The border color of the message container. ")],-1),ue={class:"prop-example"},he={class:"prop-list stacked"},_e={class:"prop-item"},me=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-status-info"),e("div",{class:"prop-desc"}," The color used for informational statuses. ")],-1),ge={class:"prop-example"},ve={class:"prop-item"},fe=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-status-info-contrast"),e("div",{class:"prop-desc"}," The color used as a contrasting foreground or background for informational statuses. ")],-1),be={class:"prop-example"},ye={class:"prop-item"},we=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-status-success"),e("div",{class:"prop-desc"}," The color used for success statuses. ")],-1),Te={class:"prop-example"},xe={class:"prop-item"},qe=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-status-success-contrast"),e("div",{class:"prop-desc"}," The color used as a contrasting foreground or background for success statuses. ")],-1),Me={class:"prop-example"},Se={class:"prop-item"},ke=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-status-warning"),e("div",{class:"prop-desc"}," The color used for warning statuses. ")],-1),Ce={class:"prop-example"},Ie={class:"prop-item"},Oe=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-status-warning-contrast"),e("div",{class:"prop-desc"}," The color used as a contrasting foreground or background for warning statuses. ")],-1),Pe={class:"prop-example"},je={class:"prop-item"},Ve=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-status-error"),e("div",{class:"prop-desc"}," The color used for error statuses. ")],-1),Be={class:"prop-example"},De={class:"prop-item"},Le=e("div",{class:"prop-info"},[e("h4",{class:"prop-name"},"--protean-status-error-contrast"),e("div",{class:"prop-desc"}," The color used as a contrasting foreground or background for error statuses. ")],-1),Ne={class:"prop-example"};function $e(n,l,p,c,i,d){const o=x("code-snippet"),f=q("prop");return h(),u(g,null,[O,P,e("section",j,[V,e("div",B,[e("protean-message",{class:"overview-demo-element",type:n.demoType,level:n.demoLevel},[s(" Message info: "),L],8,D)]),e("div",N,[e("protean-select",{class:"demo-select-type",label:"Message type",value:n.demoType,onChange:l[0]||(l[0]=r=>n.demoType=r.detail.value)},[(h(!0),u(g,null,w(n.demoTypes,r=>(h(),u("protean-option",{label:r,value:r},v(r),9,A))),256))],40,$),T(e("protean-checkbox",{class:"demo-toggle-level",label:"Show as status message",variant:"toggle",onChange:l[1]||(l[1]=r=>n.demoIsStatus=r.detail.checked)},null,544),[[f,n.demoIsStatus,"checked"]])]),e("div",U,[t(o,{substitutions:[n.demoType,n.demoLevel]},{default:a(()=>[s(v(`
            <protean-message
                class="overview-demo-element"
                type="{0}"
                level="{1}"
            >
                Message info:
                <ul>
                    <li>Message detail #1</li>
                    <li>Message detail #2</li>
                    <li>Message detail #3</li>
                </ul>
            </protean-message>
            `))]),_:1},8,["substitutions"])])]),F,e("section",null,[E,e("section",null,[R,W,e("ul",z,[e("li",G,[H,e("div",J,[t(o,{language:"javascript"},{default:a(()=>[s(" element.type = 'success'; ")]),_:1})])]),e("li",K,[Q,e("div",X,[t(o,{language:"javascript"},{default:a(()=>[s(" element.level = 'status'; ")]),_:1})])])])]),e("section",null,[Y,Z,e("ul",ee,[e("li",se,[oe,e("div",te,[t(o,{language:"css"},{default:a(()=>[s(" --protean-message-margin: 1rem 0; ")]),_:1})])]),e("li",ae,[ne,e("div",le,[t(o,{language:"css"},{default:a(()=>[s(" --protean-message-background-color: #2a2a2a; ")]),_:1})])]),e("li",ie,[re,e("div",ce,[t(o,{language:"css"},{default:a(()=>[s(" --protean-message-text-color: #fcfcfc; ")]),_:1})])]),e("li",pe,[de,e("div",ue,[t(o,{language:"css"},{default:a(()=>[s(" --protean-message-border-color: #353535; ")]),_:1})])])]),e("ul",he,[e("li",_e,[me,e("div",ge,[t(o,{language:"css"},{default:a(()=>[s(" --protean-status-info: #0965b7; ")]),_:1})])]),e("li",ve,[fe,e("div",be,[t(o,{language:"css"},{default:a(()=>[s(" --protean-status-info-contrast: #ffffff; ")]),_:1})])]),e("li",ye,[we,e("div",Te,[t(o,{language:"css"},{default:a(()=>[s(" --protean-status-success: #1d820f; ")]),_:1})])]),e("li",xe,[qe,e("div",Me,[t(o,{language:"css"},{default:a(()=>[s(" --protean-status-success-contrast: #ffffff; ")]),_:1})])]),e("li",Se,[ke,e("div",Ce,[t(o,{language:"css"},{default:a(()=>[s(" --protean-status-warning: #e6c400; ")]),_:1})])]),e("li",Ie,[Oe,e("div",Pe,[t(o,{language:"css"},{default:a(()=>[s(" --protean-status-warning-contrast: #1a1a1a; ")]),_:1})])]),e("li",je,[Ve,e("div",Be,[t(o,{language:"css"},{default:a(()=>[s(" --protean-status-error: #ab0000; ")]),_:1})])]),e("li",De,[Le,e("div",Ne,[t(o,{language:"css"},{default:a(()=>[s(" --protean-status-error-contrast: #ffffff; ")]),_:1})])])])])])],64)}const Fe=M(_,[["render",$e]]);export{Fe as default};
