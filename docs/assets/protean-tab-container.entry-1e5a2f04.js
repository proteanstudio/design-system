import{r,c as l,h as i,g as h}from"./index-e2c2285b-c4441d08.js";import{c as u}from"./utils-9777d7c1-a2ad5c7b.js";const d=`*{box-sizing:border-box}input,button{font-family:inherit;font-size:inherit}button{cursor:pointer;background:none;border:none}:host(.sr),:host(.sr) button{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.sr,.sr button{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap}.hidden{display:none}:host([hidden]){display:none}.invisible{visibility:hidden}:host{display:block}.tab-list{display:flex;align-items:center;overflow-x:auto;margin:0;padding:0;border-top:1px solid var(--protean-tab-container-separator-color, #535353);list-style:none}.tab-list button{font-size:1.125rem;padding:1rem;text-decoration:none;color:inherit;transition:color 0.2s ease-in-out, background-color 0.2s ease-in-out,
        box-shadow 0.2s ease-in-out}.tab-list button:hover{background-color:var(
        --protean-tab-container-hover-background-color,
        #353535
    );color:var(--protean-tab-container-hover-text-color, inherit)}.tab-list button[aria-selected='true']{box-shadow:inset var(--protean-tab-container-active-border-color, #c7b5fb)
        0 5px}`,c=class{constructor(a){r(this,a),this.change=l(this,"change",3),this.guid=u(),this.updateTabData=()=>{this.updateTabPanes(),this.updateTabs()},this.updateTabPanes=()=>{this.tabPanes.forEach((t,e)=>{t.selected=t.value===this.selectedValue,t.guid=this.guid,t.index=e})},this.updateTabs=()=>{this.tabs=Array.from(this.tabPanes).map(t=>{const{label:e,value:s,index:n}=t;return{label:e,value:s,index:n}})},this.onTabClick=t=>{const e=t.target.dataset.value;e!==this.value&&this.change.emit({value:e})},this.onTabKeyup=t=>{const e=t.target.dataset.value;if(t.key==="ArrowRight"){this.moveToAdjacentTab(e,"next");return}if(t.key==="ArrowLeft"){this.moveToAdjacentTab(e,"prev");return}},this.buildTabControl=t=>{const e=t.value===this.selectedValue;return i("button",{role:"tab",type:"button","aria-selected":`${e}`,tabIndex:e?0:-1,"data-value":t.value,id:`tab-${this.guid}-${t.index}`,onClick:this.onTabClick,onKeyUp:this.onTabKeyup},t.label)},this.value=void 0,this.name="",this.tabs=void 0}get tabPanes(){return this.hostElement.querySelectorAll(`protean-tab-pane[name="${this.name}"]`)}get selectedValue(){return this.tabs?.some(t=>t.value===this.value)??!0?this.value:this.tabs[0]?.value??""}defaultChangeHandler(a){a.target===this.hostElement&&!this.hostElement.onchange&&(this.value=a.detail.value)}onValueChange(){this.focusActiveTab()}connectedCallback(){const a=new MutationObserver(this.updateTabData);a.observe(this.hostElement,{childList:!0,subtree:!0,attributes:!0}),this.updateTabData(),this.observer=a}disconnectedCallback(){this.observer.disconnect()}moveToAdjacentTab(a,t){const e=this.tabs.map(o=>o.value).indexOf(a);let s=e;t==="next"?e<this.tabs.length-1?s++:s=0:e>0?s--:s=this.tabs.length-1;const n=this.tabs[s].value;this.change.emit({value:n})}focusActiveTab(){this.hostElement.shadowRoot.querySelector(`button[data-value="${this.selectedValue}"]`).focus()}render(){return i("div",{class:"tab-container"},i("div",{class:"tab-list",role:"tablist"},this.tabs.length>1&&this.tabs.map(this.buildTabControl)),i("div",{class:"tab-content"},i("slot",null)))}get hostElement(){return h(this)}static get watchers(){return{value:["onValueChange"]}}};c.style=d;export{c as protean_tab_container};
